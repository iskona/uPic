{"version":3,"sources":["Style/Img/6.jpg","Style/Img/8.jpg","Style/Img/11.jpg","Style/Img/9.jpg","components/NavListItem.js","components/NavSearchForm.js","utils/API.js","components/NavBar.js","components/Title.js","components/SignUp.js","components/MainContent.js","components/Login.js","components/Profile.js","components/UploadImage.js","components/ContestDetails.js","components/Button.js","components/ImageMasonryComponent.js","components/ImageLink.js","components/Rating/RatingStar.js","components/Rating/RatingForm.js","components/ImageGrid.js","components/ShowContestPage.js","components/ShowWinnerPage.js","components/ContestContent.js","components/ContestGrid.js","components/ContestList.js","components/PersonalAcount/AccountHeader.js","components/PersonalAcount/AdditionalInfo.js","components/PersonalAcount/PersonalData.js","components/PersonalAcount/updateContestForm.js","components/PersonalAcount/EventsHosted.js","components/PersonalAcount/Participation.js","components/PersonalAcount/AccountNav.js","components/PersonalAcount/Account.js","components/ContestForm.js","components/ImagePage.js","components/SearchedContests.js","App.js","registerServiceWorker.js","index.js","Style/Img/7.jpg"],"names":["module","exports","__webpack_require__","p","NavListItem","_ref","path","menuLabel","react_default","a","createElement","className","react_router_dom","to","window","location","pathname","NavSearchForm","inputRef","useRef","_useState","useState","_useState2","Object","slicedToArray","searchOn","setSearchOn","_useState3","_useState4","searchInput","setSearchInput","useEffect","console","log","Fragment","ref","type","placeholder","aria-label","onClick","event","preventDefault","current","value","toLowerCase","react_router","state","searchVal","API","saveUser","userDetails","axios","post","checkUser","getUser","get","saveImageDetails","imageDetails","updateUserDetais","patch","getImageDetails","contestId","getPersonalImages","logoutUser","createContestDetails","getOpenContests","getClosedContests","checkUserParticipation","user","getContestByEmail","getRating","img_id","contest_id","updateRating","ratingDetails","put","getContestByID","id","updateContestDetails","getAverageRating","updateAverageRating","contestRatings","searchContests","category","stream","require","Navbar","history","useHistory","currentPath","setcurrentPath","notification","connect","feed","listen","subscribe","data","notificationmessage","JSON","parse","new","object","NotificationManager","success","title","message","replace","redirecturl","initNotifications","then","results","activities","slice","forEach","activity","handleLogout","res","subscription","cancel","href","data-toggle","data-target","aria-controls","aria-expanded","components_NavListItem","components_NavSearchForm","lib","Title","displaySize","concat","SignUp","signedin","loggedIn","setloggedIn","nameRef","emailRef","passwordRef","password2Ref","bgStyle","backgroundImage","Img","style","email","components_Title","name","password","password2","result","localStorage","setItem","MainContent","isMainPage","setIsMainPage","showSignUp","setshowSignUp","backgrounds","Img1","Img2","Img3","Img4","color","height","components_SignUp","Login","Profile","role","src","alt","UploadImage","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","singleFileChangedHandler","setState","selectedFile","target","files","singleFileUploadHandler","relaodTheComponet","FormData","contestid","append","headers","accept","Accept-Language","Content-Type","_boundary","response","status","error","code","ocShowAlert","uploaded","hideUploadButton","owner","getItem","imageUrl","thumbnailUrl","catch","err","background","arguments","length","undefined","alertContainer","document","querySelector","alertEl","textNode","createTextNode","setAttribute","$","css","appendChild","setTimeout","fadeOut","remove","selectedFiles","boxShadow","marginLeft","onChange","Component","ContestDetails","contestData","showUpload","description","duedate","Button","classNames","onClickHandler","label","masonryOptions","fitWidth","colomnWidth","gutter","ImageLink","width","RatingStar","starValue","starInnerText","rating","ratingUpdateHandler","starred","htmlFor","image_id","dbData","RatingForm","img","i","setRating","newRating","setNewRating","new_rating","_id","rating_val","labelText","action","Rating_RatingStar","ImageGrid","images","showRating","showRatingForm","setShowRatingForm","react_masonry_component_lib_default","elementType","options","disableImagesLoaded","updateOnEachImageLoad","map","backgroundColor","key","components_ImageLink","Rating_RatingForm","ShowContestPage","backToContest","setShowUpload","setImages","_useState5","_useState6","relaodImages","setReloadImages","_useState7","_useState8","setUploaded","_useState9","_useState10","participated","setParticipated","components_ContestDetails","components_ImageGrid","components_UploadImage","components_Button","ShowWinnerPage","ContestContent","contest","contestDetails","buttonLabel","maxWidth","e","ContestGrid","contests","components_ContestContent","ContestList","setContests","closedContests","setClosedContests","eachContest","setEachContest","viewClicked","setViewClicked","viewWinners","setViewWinners","components_ContestGrid","components_ShowContestPage","components_ShowWinnerPage","AccountHeader","userData","joiningdate","date","substring","AdditionalInfo","Desc","textareaDetail","settextareaDetail","rows","evt","setDescription","PersonalData","InfoComponent","setInfoComponent","userInfo","userDescription","setComponenetUserInfo","PersonalAcount_AdditionalInfo","aria-hidden","UpdateContestForm","dueDate","handleChange","objectSpread","defineProperty","item","setDescriptionDetails","unique","distinct","push","ratingsArr","_loop","eachImage","filter","image","sum_rating","j","avg_rating","Math","floor","imagekey","ratingVal","obj","dbResponse","EventsHosted","constestDetails","setContestDetails","detail","setDetail","contestform","setcontestformt","handlHideShow","getAttribute","updateContestForm","childevent","index","findIndex","update","$set","data-th","startdate","custom-attribute","Participation","personalImages","setPerosnalImages","class","AccountNav","renderComponent","setRenderComponent","handleClick","componentName","PersonalAcount_PersonalData","PersonalAcount_EventsHosted","PersonalAcount_Participation","renderSubComp","Account","usersState","setuserState","PersonalAcount_AccountHeader","PersonalAcount_AccountNav","ContestForm","titleRef","descriptionRef","categoryRef","uuid","ImagePage","SearchedContests","App","components_NavBar","exact","component","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","ReactDOM","render","src_App","getElementById","URL","process","origin","addEventListener","fetch","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.904f4909.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/6.c3aa4026.jpg\";","module.exports = __webpack_public_path__ + \"static/media/8.1bb0cfda.jpg\";","module.exports = __webpack_public_path__ + \"static/media/11.831d07c5.jpg\";","module.exports = __webpack_public_path__ + \"static/media/9.6e3c6b1a.jpg\";","import React from 'react'\nimport {Link} from \"react-router-dom\";\nfunction NavListItem({ path, menuLabel }) {\n    return (\n        <li className=\"nav-item active\">\n              <Link to={path} \n                 className={\n                    window.location.pathname === {path} ? \"nav-link active\" : \"nav-link\"\n                   }>\n                  {menuLabel}\n              </Link>\n        </li>\n    )\n}\n\nexport default NavListItem\n","import React, {  useState, useRef, useEffect } from \"react\";\nimport \"../Style/NavBar.css\"\nimport { Redirect } from \"react-router-dom\";\n\nfunction NavSearchForm() {\n  \n  const inputRef = useRef();\n \n  const [searchOn, setSearchOn] =  useState(false)\n  const [searchInput, setSearchInput] = useState(\"\");\n  \n  useEffect(()=>{\n    console.log(\"Welcome\")\n    //setSearchOn(false)\n  });\n\n  const serchForAcategory = (event) => {\n    event.preventDefault();\n    console.log(\"clicked\")\n    console.log('status '+inputRef.current.value);\n    console.log(\"search on value \"+searchOn);\n    setSearchInput(inputRef.current.value.toLowerCase())\n     setSearchOn(true);\n  }\n  return (\n    <>\n    <div className=\"searchbox d-flex justify-content-center\">\n      <form className=\"form-inline\">\n        <div className=\"input-group mr-4\">\n          <input\n            className=\"form-control navBarSearch my-lg-0\"\n             ref={inputRef}\n            // value={searchInput}\n            // onChange={onChangeHandler}\n            type=\"search\"\n            placeholder=\"Seach for any category\"\n            aria-label=\"Search\"\n          />\n          <div className=\"input-group-append\">\n            <span className=\"input-group-text\"><i className='fas fa-search' onClick={serchForAcategory}></i></span>\n          </div>\n        </div>\n      </form>\n    </div>\n    {searchOn && <Redirect to={{\n                pathname: '/search',\n                state: { searchVal: searchInput }\n            }}\n            />}\n    </>\n  );\n}\nexport default NavSearchForm;","import axios from \"axios\";\n\nexport default {\n    saveUser: function(userDetails){\n        // console.log(userDetails);\n       return axios.post(\"/api/users/signup\",userDetails);\n        \n    },\n    checkUser: function(userDetails) {\n        // console.log(userDetails);\n        return axios.post(\"/api/users/login\", userDetails);\n    },\n    getUser: function () {\n        return axios.get(\"/api/users/personalAccount\");\n    },\n    // getContests: function (req, res) {\n    //     return axios.get(\"api/contests\");\n    // },\n    saveImageDetails: function (imageDetails) {\n        console.log(\"image details are \" + imageDetails);\n        return axios.post(\"api/images/saveImage\", imageDetails);\n    },\n    updateUserDetais: function(userDetails) {\n        return axios.patch(\"/api/users/personalAccount\", userDetails);\n    },\n    // createContestDetails: function (userDetails) {\n    //     console.log(userDetails)\n    //     return axios.post(\"/api/contests/hostevents\", userDetails);\n    // },\n    getImageDetails: function (contestId){\n        console.log('contest id is '+contestId);\n        return axios.get(\"api/images/getImages/\"+contestId);\n    },\n\n    getPersonalImages : function(){\n        return axios.get(\"/api/images/personalAccount\");\n    },\n    logoutUser: function(){\n        return axios.get(\"/api/users/logout\")\n    },\n\n    //Contest Api\n\n    createContestDetails : function(userDetails) {\n        return axios.post(\"/api/contests/hostevents\",userDetails);\n    },\n    getOpenContests: function() {\n        return axios.get(\"/api/contests/openContests\");\n    },\n    getClosedContests: function() {\n        return axios.get(\"/api/contests/closedContests\");\n    },\n    checkUserParticipation(user,contestId){\n        //this method checks in the image collecion to check if the user passed as an argument had already uploaded an image for the contest id passed.\n        return axios.get(\"/api/images/checkUserParticipation/\"+user+\"/\"+contestId);\n    },\n    getContestByEmail: function(){\n        return axios.get(\"/api/contests/personalAccount\");\n    },\n    getRating: function(img_id,contest_id,user){\n        return axios.get(\"/api/images/getImageRating/\"+img_id+\"/\"+contest_id+\"/\"+user);\n    },\n    updateRating: function(ratingDetails){\n      console.log(ratingDetails)\n       return axios.put(\"/api/images/updateRating\",ratingDetails);\n    },\n    getContestByID :function(id){\n        return axios.get(\"/api/contests/personalAccount/\" + id)\n    },\n    updateContestDetails : function(id,userDetails){\n        return axios.patch(\"/api/contests/personalAccount/\" + id,userDetails )\n    },\n    getAverageRating : function(contest_id){\n        return axios.get(\"api/images/calcAverageRating/\"+contest_id);\n    },\n    updateAverageRating: function(contestRatings){\n        return axios.put(\"/api/images/setAvgRating\",contestRatings);\n    },\n    searchContests: function(category){\n        return axios.get(\"/api/contests/searchforAcategory/\"+category);\n    }\n}","import React, { useState, useEffect } from \"react\";\nimport NavListItem from \"./NavListItem\";\nimport { useHistory } from 'react-router-dom'\nimport \"../Style/NavBar.css\"\nimport NavSearchForm from \"./NavSearchForm\"\nimport API from \"../utils/API\";\n//import { StreamApp, NotificationDropdown  } from 'react-activity-feed';\nimport 'react-notifications/lib/notifications.css';\nimport {NotificationContainer, NotificationManager} from 'react-notifications';\nlet stream = require('getstream');\n\nfunction Navbar() {\n  const history = useHistory()\n  const [currentPath, setcurrentPath] = useState(window.location.pathname);\n  //const [notificationState, setNotificationState] = useState(false);\n\n  let userToken = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoidXBpYyJ9.k1P-ctjAM1fjTxQQATPIpwUGlEIUipaTfh_U_59goyc\"\n  let client = stream.connect('cbam34cnp437', userToken, '80330')\n  var notification = client.feed('notification', 'upic');\n  var subscription;\n\n  useEffect(() => {\n    return history.listen(location => {\n      setcurrentPath(location.pathname);\n      console.log(currentPath)\n    })\n  }, [history])\n\n  useEffect(() => {\n    //subscribe to any events\n    var subscription = notification.subscribe(function(data) {\n      let notificationmessage = JSON.parse(data.new[0].object);\n      NotificationManager.success(notificationmessage.title, notificationmessage.message, 5000,()=>{\n        window.location.replace(notificationmessage.redirecturl)\n      });\n    });\n  }, [])\n\n  const initNotifications = ()=> {\n    notification.get().then((data)=> {\n      data.results[0].activities.slice(0,5).forEach(activity => {\n        let notificationmessage = JSON.parse(activity.object);\n        NotificationManager.success(notificationmessage.title, notificationmessage.message, 5000, ()=>{\n          window.location.replace(notificationmessage.redirecturl)\n        });\n      })\n    });\n  }\n\n  const handleLogout = () =>{\n    API.logoutUser().then(res => console.log(\"Successfully logged out\"))\n    subscription.cancel();\n  }\n\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n      <div className=\"container\">\n        <a className=\"navbar-brand mb-0\" href=\"/\">uPic</a>\n\n        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarTogglerDemo02\"\n          aria-controls=\"navbarTogglerDemo02\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n        <div className=\"collapse navbar-collapse\" id=\"navbarTogglerDemo02\">\n\n        {\n          (() => {\n            switch (currentPath) {\n              case \"/\":\n              case \"/about\":\n              case \"/login\":\n              case \"/signup\":\n                return (\n                  <ul className=\"navbar-nav ml-auto mt-2 mt-lg-0\">\n                    <NavListItem path=\"/about\" menuLabel=\"About\" />\n                    <NavListItem path=\"/signup\" menuLabel=\"SignUp\" />\n                    <NavListItem path=\"/login\" menuLabel=\"LogIn\" />\n                  </ul>\n                );\n              case \"/profile\":\n              case \"/personalAccount\":\n              case \"/hostevents\":\n              case \"/search\":\n                return (\n                  <ul className=\"nav headerNav nav-pills nav-justified profileNav\">\n                    <NavListItem path=\"/personalAccount\" menuLabel=\"Account\"  className =\"nav-item\"/>\n                    <NavListItem path=\"/hostevents\" menuLabel=\"HostEvent\"  className =\"nav-item\"  />\n                    <NavListItem path=\"/contests\" menuLabel=\"Contests\"  className =\"nav-item\"/>\n                    <NavSearchForm />\n                    {/* <NavListItem path=\"/notification\" menuLabel=\"HostEvent\"  className =\"nav-item\"  /> */}\n                    <NavListItem path=\"/\" menuLabel=\"Logout\"  className =\"nav-item\" onClick ={handleLogout}/>\n                    <li onClick = {initNotifications} className=\"nav-item active\"><h6><i className=\"fa fa-bell\" /></h6></li> \n                    <NotificationContainer/>\n                  </ul>\n                )\n              case \"/contests\":\n                return (\n                  <ul className=\"nav headerNav nav-pills nav-justified profileNav\">\n                  <NavListItem path=\"/personalAccount\" menuLabel=\"Account\"  className =\"nav-item\"/>\n                  <NavListItem path=\"/hostevents\" menuLabel=\"HostEvent\"  className =\"nav-item\"  />\n                  <NavSearchForm />\n                  <NotificationContainer/>\n                  <li onClick = {initNotifications}  className=\"nav-item active\"><h6><i className=\"fa fa-bell pt-3\"/></h6></li> \n\n                  <NavListItem path=\"/\" menuLabel=\"Logout\"  className =\"nav-item\" onClick ={handleLogout}/>\n                </ul>\n                )\n              default:\n                break;\n            }\n          })\n            ()}\n      </div>\n      </div>\n    </nav>);\n\n}\n\n\nexport default Navbar;\n","import React from 'react'\n\nfunction Title({ title, displaySize }) {\n    return (\n        // className={`container${props.fluid ? \"-fluid\" : \"\"}`}\n        <h2 className={`display-${displaySize} title`}>{title}</h2>\n\n    )\n}\n\nexport default Title\n","import React, { useState, useRef } from 'react';\nimport API from '../utils/API';\nimport { Redirect } from \"react-router-dom\";\nimport \"../Style/LogInSignUp.css\";\nimport Title from './Title';\nimport Img from '../Style/Img/6.jpg';\n\nfunction SignUp() {\n    const [loggedIn, setloggedIn] = useState({\n        signedin: false,\n        user: \"\"\n    });\n\n    const nameRef = useRef();\n    const emailRef = useRef();\n    const passwordRef = useRef();\n    const password2Ref = useRef();\n    const bgStyle = {\n        backgroundImage: \"url(\" + Img + \")\"\n    };\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        API.saveUser({\n            name: nameRef.current.value,\n            email: emailRef.current.value,\n            password: passwordRef.current.value,\n            password2: password2Ref.current.value\n        })\n            .then(result => {\n                console.log(result.data)\n                localStorage.setItem(\"email\", result.data.email);\n                setloggedIn({\n                    signedin: true,\n                    user: result.data.email\n                });\n            });\n    }\n\n    return (\n        <div className=\"bgCover\" style={bgStyle}>\n\n            {!loggedIn.signedin ?\n                (<div className=\"container p-5 signUpDiv\">\n                    <div className=\"jumbotron mt-5 p-5 w-50 mx-auto justify-content-center\">\n                        <Title title=\"Sign up for uPic\" displaySize=\"5\" />\n                        <form className=\"p-5 mx-auto\">\n                            <div className=\"form-group\">\n                                <input type=\"text\"\n                                    className=\"form-control mb-1\"\n                                    placeholder=\"User Name\"\n                                    ref={nameRef} />\n                                <input type=\"email\"\n                                    className=\"form-control mb-1\"\n                                    placeholder=\"Email\"\n                                    ref={emailRef} />\n                                <input type=\"password\"\n                                    className=\"form-control mb-1\"\n                                    placeholder=\"Password\"\n                                    ref={passwordRef} />\n                                <input type=\"password\"\n                                    className=\"form-control mb-1\"\n                                    placeholder=\"Confirm Password\"\n                                    ref={password2Ref} />\n                            </div>\n\n                            <button type=\"submit\"\n                                className=\"btn btn-secondary btn-block\"\n                                onClick={handleSubmit}>\n                                Submit\n                            </button>\n                        </form>\n                        <hr />\n                        <h6>\n                            Already a uPic member? <a href=\"/login\">Log in here</a>\n                        </h6>\n                    </div>\n\n                </div>) : (<Redirect to={{\n                    pathname: '/profile',\n                    state: { email: `${loggedIn.user}` }\n                }}\n                />)\n            }\n        </div>\n    )\n};\n\nexport default SignUp;\n","import React, { useState, useEffect } from 'react'\nimport SignUp from './SignUp';\nimport Title from './Title';\nimport Img1 from '../Style/Img/7.jpg';\nimport Img2 from '../Style/Img/8.jpg';\nimport Img3 from '../Style/Img/11.jpg';\nimport Img4 from '../Style/Img/9.jpg';\n\nfunction MainContent() {\n  const [isMainPage, setIsMainPage] = useState(true);\n  const [showSignUp, setshowSignUp] = useState(false);\n  const showSignUpPage = () => {\n    setIsMainPage(false);\n    setshowSignUp(true);\n  }\n\n  const backgrounds = [Img1, Img2, Img3, Img4];\n  let bgStyle = {\n    backgroundImage: \"url(\" + backgrounds[2] + \")\"\n  };\n  let current = 0;\n\n  const nextBackground = () => {\n    current++;\n    current = current % backgrounds.length;\n    console.log(current);\n    return bgStyle = {\n      backgroundImage: \"url(\" + backgrounds[current] + \")\"\n    };\n    // return bgStyle;\n  };\n\n  useEffect(() => {\n    // nextBackground();\n    // const interval = setInterval(nextBackground, 5000);\n    // return () => {\n    //   clearInterval(interval)\n    // }\n  }, []);\n\n  return (\n    <div className=\"mainBg\" style={bgStyle}>\n      {isMainPage &&\n        <div className=\"container homepageDiv mx-auto\" style={{ color: \"rgb(233,236,239)\", height: \"100vh\" }}>\n          <Title title=\"Find your Inspiration\" displaySize=\"4\" />\n          <Title title=\"Join uPic Community to start a new Photo Contest or to get involved\" displaySize=\"7\" />\n          <br></br>\n          <p className=\" row lead\">\n            <button className=\"btn btn-secondary btn-lg homePageButton\"\n              onClick={showSignUpPage}>\n              Start for Free\n            </button>\n          </p>\n        </div>}\n      {showSignUp && <SignUp />}\n    </div>\n  )\n};\n\nexport default MainContent;","import React, { useRef, useState } from 'react';\nimport API from '../utils/API';\nimport { Redirect } from \"react-router-dom\";\nimport Title from './Title';\nimport Img from '../Style/Img/7.jpg';\nimport \"../Style/LogInSignUp.css\";\n\nfunction Login() {\n    const [loggedIn, setloggedIn] = useState(false);\n    const emailRef = useRef();\n    const passwordRef = useRef();\n    const bgStyle = {\n        backgroundImage: \"url(\" + Img + \")\"\n    };\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        API.checkUser({\n            email: emailRef.current.value,\n            password: passwordRef.current.value\n        })\n            .then(result => {\n                console.log(result.data.email);\n                localStorage.setItem(\"email\", result.data.email);\n                setloggedIn(true);\n            });\n    }\n\n    return (\n        <div className=\"bgCover\" style={bgStyle}>\n            {!loggedIn &&\n                <div className=\"container p-5 loginDiv\">\n                    <div className=\"jumbotron mt-5 p-5 w-50 mx-auto justify-content-center\" >\n                        <Title title=\"Log in to uPic\" displaySize=\"5\" />\n                        <form className=\"p-5 mx-auto\">\n                            <div className=\"form-group\">\n                                <input type=\"email\"\n                                    className=\"form-control mb-1\"\n                                    placeholder=\"Email address\"\n                                    ref={emailRef} />\n                                <input type=\"password\"\n                                    className=\"form-control mb-1\"\n                                    placeholder=\"Password\"\n                                    ref={passwordRef} />\n                            </div>\n                            <button type=\"submit\"\n                                className=\"btn btn-secondary btn-block\"\n                                onClick={handleSubmit}>\n                                Login\n                            </button>\n                        </form>\n                        <hr />\n                        <h6>\n                            Not a uPic member? <a href=\"/signup\">Sign up here</a>\n                        </h6>\n                    </div>\n                </div>}\n            {loggedIn && (<Redirect to={{\n                pathname: '/profile',\n                state: { email: `${loggedIn.user}` }\n            }}\n            />)}\n        </div>\n    )\n};\n\nexport default Login;","import React from \"react\";\nimport \"../Style/profile.css\"\n\n\nfunction Profile() {\n   \n    return(\n        <div>\n            <div className=\"Container\" >\n                <div className=\"feed\">\n                    <div className=\"activityCard\" >\n                        <div className=\"cardDiv\">\n                            <div className=\"row activity-card-Header \" role=\"heading\">\n                                <h4>Hearts</h4>\n                            </div>\n                            <img className=\"pic\" src=\"Images/image2.jpg\" alt=\"deep\" />\n                            <br />\n                            <h4>By :</h4>\n                            <br />\n                            <div className=\"imagefooter\"><hr></hr><p>footer</p></div>\n                        </div>\n\n                    </div>\n                </div>\n            </div>\n          \n            \n           </div>\n    )\n\n}\nexport default Profile;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport $ from 'jquery';\nimport API from '../utils/API';\n\nclass UploadImage extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tselectedFile: null,\n\t\t\tselectedFiles: null,\n\t\t\tuploaded : false\n\t\t}\n\t}\n\n\tsingleFileChangedHandler = (event) => {\n\t\tthis.setState({\n\t\t\tselectedFile: event.target.files[0]\n\t\t});\n\t};\n\n\tsingleFileUploadHandler = (event) => {\n\t\tthis.props.relaodTheComponet();\n\t\tconst data = new FormData();\n\t\tconsole.log(\"--- contest id ---\"+this.props.contestid);\n\t\t// If file selected\n\t\tif (this.state.selectedFile) {\n\t\t\tdata.append('contestImage', this.state.selectedFile, this.state.selectedFile.name);\n\n\t\t\tconsole.log(\"data being sent \"+data);\n\t\t\taxios.post('/api/images/img-upload', data, {\n\t\t\t\theaders: {\n\t\t\t\t\t'accept': 'application/json',\n\t\t\t\t\t'Accept-Language': 'en-US,en;q=0.8',\n\t\t\t\t\t'Content-Type': `multipart/form-data; boundary=${data._boundary}`,\n\t\t\t\t}\n\t\t\t})\n\t\t\t\t.then((response) => {\n\t\t\t\t\tconsole.log(response.status)\n\t\t\t\t\tconsole.log(response.data)\n\t\t\t\t\tif (200 === response.status) {\n\t\t\t\t\t\t// If file size is larger than expected.\n\t\t\t\t\t\tif (response.data.error) {\n\t\t\t\t\t\t\tif ('LIMIT_FILE_SIZE' === response.data.error.code) {\n\t\t\t\t\t\t\t\tthis.ocShowAlert('Max size: 2MB', 'red');\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tconsole.log(response.data);// If not the given file type\n\t\t\t\t\t\t\t\tthis.ocShowAlert(response.data.error, 'red');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconsole.log('else block '+response.status)\n\t\t\t\t\t\t\t// Success\n\t\t\t\t\t\t\tthis.setState({uploaded : true})\n\t\t\t\t\t\t\tthis.props.hideUploadButton();\n\t\t\t\t\t\t\tthis.ocShowAlert('File Uploaded', '#008000');\n\t\t\t\t\t\t\tconst imageDetails = {\n\t\t\t\t\t\t\t\towner:localStorage.getItem(\"email\"), //who uploaded the picture\n\t\t\t\t\t\t\t\tcontestId:this.props.contestid,//In which contest\n\t\t\t\t\t\t\t\timageUrl:response.data.imageUrl,\n\t\t\t\t\t\t\t\tthumbnailUrl: response.data.thumbnailUrl\n\t\t\t\t\t\t\t\t//amazon s3 location\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tconsole.log(imageDetails)\n\t\t\t\t\t\t\tAPI.saveImageDetails(imageDetails)\n\t\t\t\t\t\t\t.then(res => {\n\t\t\t\t\t\t\t\tconsole.log(res);\n\t\t\t\t\t\t\tthis.props.relaodTheComponet();\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t.catch(err => console.log(err))\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}).catch((error) => {\n\t\t\t\t\t// If another error\n\t\t\t\t\tthis.ocShowAlert(error, 'red');\n\t\t\t\t});\n\t\t} else {\n\t\t\t// if file not selected throw error\n\t\t\tthis.ocShowAlert('Please upload file', 'red');\n\t\t}\n\t};\n\n\tocShowAlert = ( message, background = '#3089cf' ) => {\n\t\tlet alertContainer = document.querySelector( '#oc-alert-container' ),\n\t\t alertEl = document.createElement( 'div' ),\n\t\t textNode = document.createTextNode( message );\n\t\talertEl.setAttribute( 'class', 'oc-alert-pop-up' );\n\t\t$( alertEl ).css( 'background', background );\n\t\talertEl.appendChild( textNode );\n\t\talertContainer.appendChild( alertEl );\n\t\tsetTimeout( function () {\n\t\t $( alertEl ).fadeOut( 'slow' );\n\t\t $( alertEl ).remove();\n\t\t}, 3000 );\n\t   };\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"container w-50\">\n\t\t\t\t  {/* For Alert box*/}\n\t\t\t\t  <div id=\"oc-alert-container\" className=\"p-2\"></div>\n\t\t\t\t{/* Single File Upload*/}\n\t\t\t\t{!this.state.uploaded && <div className=\"card border-light mb-3 mt-5\" style={{ boxShadow: '0 5px 10px 2px rgba(195,192,192,.5)' }}>\n\t\t\t\t\t<div className=\"card-header\">\n\t\t\t\t\t\t<h4 style={{ color: '#555', marginLeft: '12px' }}>Upload a Wonderful Pic !!</h4>\n\t\t\t\t\t\t<p className=\"text-muted\" style={{ marginLeft: '12px' }}>Upload Size: 250px x 250px ( Max 2MB )</p>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"card-body\">\n                        <input\n                            type=\"file\" \n                            onChange={this.singleFileChangedHandler} \n                            className=\"text-center\"\n                            />\n\t\t\t\t\t\t<div className=\"mt-5\">\n\t\t\t\t\t\t\t<button className=\"btn btn-info\" onClick={this.singleFileUploadHandler}>Upload!</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>}\n\t\t\t\t{this.state.uploaded && <h4>Thanks for the participation!!</h4>}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default UploadImage;","import React from 'react'\n\nfunction ContestDetails({contestData, showUpload}) {\n    return (\n        <div>\n              <h3>{contestData.title}</h3>\n             <p className=\"font-italic\">{contestData.description}</p>\n             <p>Host: {contestData.owner}</p>\n            <p>Due on: {contestData.duedate}</p>\n            {!showUpload && <p>Wanna Participate !!?</p>}\n        </div>\n    )\n}\n\nexport default ContestDetails\n","import React from 'react'\n\nfunction Button({classNames, onClickHandler, label }) {\n    return (\n        <button\n            className={classNames}\n            onClick={onClickHandler}\n        >{label}</button>\n    )\n}\n\nexport default Button\n","export const masonryOptions = {\n    fitWidth : true,\n    colomnWidth: 200,\n    gutter: 5\n}","import React from 'react'\nimport { Link } from 'react-router-dom';\n\nfunction ImageLink({imageUrl, thumbnailUrl}) {\n    return (\n        <Link to={{\n            pathname:\"/image\",\n            state:{\n                imageUrl : imageUrl}\n        }\n        }> <img\n        src={thumbnailUrl}\n        style={{ width: 320 }}\n        alt=\"Contest images\" /> </Link>\n    )\n}\n\nexport default ImageLink\n","import React,{useState} from 'react'\nimport API from \"../../utils/API\";\n\nfunction RatingStar( {id, starValue, starInnerText, rating, contestId, ratingUpdateHandler} ) {\n\n    console.log(`rating = ${rating} stravalue = ${starValue}`)\n    const starred = (rating>=starValue) ? true : false ;\n    console.log(\"starred value \"+starred);\n    function updateRating(event) {\n        console.log(\"--id --\" + id);\n        console.log(starValue)\n        const ratingDetails = {\n            image_id : id,\n            contest_id: contestId, // NEEDS TO BE DYNAMIC\n            user:localStorage.getItem(\"email\"),\n            rating  : starValue\n        }\n        API.updateRating(ratingDetails)\n           .then(dbData => {\n               console.log(dbData.data.rating);\n               ratingUpdateHandler(dbData.data.rating);\n            })\n           .catch(err => console.log(err));\n    }\n\n    return (\n        <>\n            <input className=\"visuallyhidden\" type=\"radio\" name=\"rating\" id={id} value={starValue} />\n            <label htmlFor={id}\n                    onClick={updateRating}\n                    >\n                <span className=\"visuallyhidden\">{starInnerText}</span>\n                <i className={starred ? \"fa-star fas\" : \"fa-star far\"} style={{color:\"\t#D4AF37\"}}></i>\n            </label>\n        </>\n    )\n}\nexport default RatingStar\n\n","import React,{useState, useEffect} from 'react'\nimport \"../../Style/RatingForm.css\";\nimport RatingStar from './RatingStar';\nimport API from \"../../utils/API\";\n\nfunction RatingForm({ img, i, contestId}) {\n\nconst [rating, setRating] = useState(0);\nconst [newRating, setNewRating ] = useState(0);\n\nconst ratingUpdateHandler = (new_rating) => {\n    console.log(\"Updated Rating \"+new_rating);\n    setNewRating(new_rating);\n}\n    useEffect(()=>{\n        //get rating value for this particular image id, contest id and user combination from ratings collection\n        getRatingFromDb();\n    },[newRating]);\n\n    \n    function getRatingFromDb() {\n        API.getRating(img._id, contestId, localStorage.getItem(\"email\"))\n            .then(dbData => {\n                console.log(dbData.data[0].rating);\n                const rating_val = dbData.data[0].rating;\n                if (rating_val > 0) {\n                    setRating(rating_val);\n                }\n                // setRating()\n            })\n            .catch(err => console.log(err));\n    }\n\n    console.log(img)\n    console.log(\"image sent \"+img._id);\n    console.log(\"i \"+i);\n    const labelText = {\n        1: \"One Star\",\n        2: \"Two Stars\",\n        3: \"Three Stars\",\n        4: \"Four Stars\",\n        5: \"Five Stars\"\n      };\n    return (\n        <form action=\"post\">\n             <RatingStar  id={img._id} starValue=\"1\" starInnerText={labelText[1]} rating={rating} contestId={contestId}\n                          ratingUpdateHandler={ratingUpdateHandler}/>\n             <RatingStar  id={img._id} starValue=\"2\" starInnerText={labelText[2]} rating={rating} contestId={contestId}\n                          ratingUpdateHandler={ratingUpdateHandler}/>\n             <RatingStar  id={img._id} starValue=\"3\" starInnerText={labelText[3]} rating={rating} contestId={contestId}\n                          ratingUpdateHandler={ratingUpdateHandler}/>\n             <RatingStar  id={img._id} starValue=\"4\" starInnerText={labelText[4]} rating={rating} contestId={contestId}\n                          ratingUpdateHandler={ratingUpdateHandler}/>\n             <RatingStar  id={img._id} starValue=\"5\" starInnerText={labelText[5]} rating={rating} contestId={contestId}\n                          ratingUpdateHandler={ratingUpdateHandler}/>\n        </form>\n    )\n\n}\n\nexport default RatingForm\n","import React, {useState, useEffect} from 'react'\nimport Masonry from 'react-masonry-component';\nimport { masonryOptions } from \"./ImageMasonryComponent\";\nimport ImageLink from './ImageLink';\nimport RatingForm from './Rating/RatingForm';\n\n\nfunction ImageGrid({images, contestId, showRating}) {\n\n    const [showRatingForm, setShowRatingForm] = useState(false);\n    useEffect(()=>{\n        if(showRating){\n            setShowRatingForm(true);\n        }\n    },[])\n    return (\n        <>\n              <Masonry\n                className={\"grid\"}\n                elementType={\"div\"}\n                options={masonryOptions}\n                disableImagesLoaded={false}\n                updateOnEachImageLoad={false}\n            >\n                {images.map((img, i) => {\n                    return (\n                        <div className=\"pb-0\" style={{backgroundColor:\"rgb(108,117,125)\"}} key={i}>\n                            <ImageLink imageUrl={img.imageUrl} thumbnailUrl={img.thumbnailUrl}/>\n                           {showRatingForm && <RatingForm img={img} i={i} contestId={contestId}/>}\n                        </div>\n                    )\n                })}\n            </Masonry>\n\n        </>\n    )\n}\n\nexport default ImageGrid\n","import React, { useState, useEffect } from 'react'\nimport UploadImage from './UploadImage'\nimport ContestDetails from \"./ContestDetails\";\nimport Button from './Button';\nimport API from '../utils/API';\nimport Title from './Title';\nimport ImageGrid from './ImageGrid';\n\nfunction ShowContestPage({ backToContest, contestData }) {\n\n    const [showUpload, setShowUpload] = useState(false);\n    const [images, setImages] = useState([]);\n    const [relaodImages, setReloadImages] = useState(false);\n    const [uploaded, setUploaded] = useState(false);\n    const [participated, setParticipated] = useState(false);\n\n    const handleUpload = () => {\n        //check if the user has already participated in this contest \n        API.checkUserParticipation(localStorage.getItem(\"email\"), contestData._id)\n            .then(res => {\n                console.log(res.data.length);\n                if (res.data.length > 0) {\n                    console.log(\"Particpated\")\n                    setParticipated(true);\n                } else {\n                    console.log(\"Not Participated \")\n                    setParticipated(false);\n                }\n            }).catch(err => console.log(err));\n        setShowUpload(!showUpload);\n    };\n\n    const relaodTheComponet = () => {\n        setReloadImages(!relaodImages);\n    }\n\n    const hideUploadButton = () => {\n        setUploaded(true);\n    }\n    useEffect(() => {\n        //load the images from the database on page load\n        API.getImageDetails(contestData._id)\n            .then(res => {\n                console.log(res.data);\n                setImages(res.data);\n            })\n            .catch(err => console.log(err))\n    }, [relaodImages]);\n\n    return (\n\n        <div className=\"jumbotron border m-1\">\n\n            <ContestDetails contestData={contestData} showUpload={showUpload} />\n\n            {/* Display Images grid, which are already added to the contest by all the other users */}\n            <ImageGrid images={images} contestId={contestData._id} showRating={true}/>\n\n            {showUpload && !participated && \n                <UploadImage contestid={contestData._id} relaodTheComponet={relaodTheComponet} hideUploadButton={hideUploadButton} />}\n\n            {!uploaded && !participated && \n                <div className=\"d-flex justify-content-center\">\n                    <Button classNames=\"mx-auto border btn btn-primary\" onClickHandler={handleUpload} label=\"Upload a Pic\" />\n                </div>}\n\n            {participated && <Title title=\"You have already uploaded a wonderul picture !!\" displaySize=\"5\" />}\n\n            <br />\n\n            <Button classNames=\"mt-1 btn btn-primary\" onClickHandler={backToContest} label=\"Contests\" />\n        </div>\n\n    )\n}\n\nexport default ShowContestPage\n","import React,{useEffect,useState} from 'react'\nimport Button from './Button';\nimport API from '../utils/API';\nimport ImageGrid from './ImageGrid';\n\nfunction ShowWinnerPage({ backToContest, contestData }) {\n\n    const [images, setImages] = useState([]);\n\n    console.log(\"Contest Details \"+contestData.title)\n    useEffect(() => {\n        //load the images from the database on page load\n        API.getImageDetails(contestData._id)\n            .then(res => {\n                console.log(res.data);\n                setImages(res.data);\n            })\n            .catch(err => console.log(err));\n    },[]);\n    return (\n        <div>\n            <h1>{contestData.title}</h1>\n            <ImageGrid images={images} contestId={contestData._id} showRating={false}/>\n            <Button classNames=\"mt-1 btn btn-primary\" onClickHandler={backToContest} label=\"Contests\" />\n        </div>\n    )\n}\n\nexport default ShowWinnerPage\n","import React from 'react'\n\nfunction ContestContent({contest, contestDetails, buttonLabel}) {\n    return (\n        <div className=\"card h-100 border-secondary\" style={{ \"maxWidth\": \"18rem\" }}>\n            <div className=\"card-body\">\n                <h5 className=\"card-title\">{contest.title}</h5>\n                <p className=\"card-text \">{contest.description}</p>\n            </div>\n            <div className=\"card-footer\">\n                <a href=\"/about\"\n                    className=\"btn btn-secondary\"\n                    onClick={(e) => {\n                        e.preventDefault();\n                        contestDetails(contest);\n                    }}>\n                    {buttonLabel}\n            </a>\n            </div>\n        </div>\n    )\n}\n\nexport default ContestContent\n","import React from 'react'\nimport ContestContent from './ContestContent';\n\nfunction ContestGrid({contests, contestDetails, buttonLabel}) {\n    return (\n        <div className=\"list-overflow-container\">\n        <div className=\"row\">\n            {contests.map(contest => {                \n                    return (\n                        <div className=\"col-lg-4 col-md-6 mb-4\" key={contest._id}>\n                            <ContestContent contest={contest} contestDetails={contestDetails} buttonLabel={buttonLabel} />\n                        </div>\n                    )\n            }\n            )}\n        </div>\n    </div>\n    )\n}\n\nexport default ContestGrid\n","import React, { useState, useEffect } from 'react'\nimport API from \"../utils/API\";\nimport Title from './Title';\nimport ShowContestPage from \"./ShowContestPage\";\nimport \"../Style/Events.css\";\nimport ShowWinnerPage from './ShowWinnerPage';\nimport ContestGrid from './ContestGrid';\n\nfunction ContestList() {\n    const [contests, setContests] = useState([]);\n    const [closedContests, setClosedContests] = useState([]);\n    const [eachContest, setEachContest] = useState({});\n    const [viewClicked, setViewClicked] = useState(false);\n    const [viewWinners, setViewWinners] = useState(false);\n\n    useEffect(() => {\n        API.getOpenContests()\n            .then(res => {\n                console.log(res.data);\n                setContests(res.data);\n            })\n            .catch(err => console.log(err))\n    }, []);\n    useEffect(() => {\n        API.getClosedContests()\n            .then(res => {\n                console.log(res.data);\n                setClosedContests(res.data);\n            })\n            .catch(err => console.log(err))\n    }, []);\n\n    const contestDetails = (contest) => {\n        console.log(contest);\n        setEachContest(contest);\n        setViewClicked(true);\n    }\n\n    const winnerDetails = (contest) => {\n        setViewWinners(true);\n        setEachContest(contest)\n    }\n\n    const backToContest = () => {\n        setViewClicked(false);\n        setViewWinners(false);\n    }\n\n    return (\n        <div className=\"bgCover\">\n            <div className=\"container p-5\">\n                {!viewWinners && !viewClicked &&\n                    <div className=\"jumbotron mt-5 p-5 mx-auto justify-content-center\">\n                        <Title title=\"Happening Contests\" displaySize=\"5\" />\n                        <small>Click to upload and rate the pictures !!</small>\n                        <br /><br />\n                        {contests.length ? (\n                            <ContestGrid contests={contests} contestDetails={contestDetails} buttonLabel=\"View\" />\n                        ) : (\n                                <h3>No Results found</h3>\n                            )\n                        }\n                        <br />\n                        <Title title=\"Past Contests\" displaySize=\"5\" />\n                        <small>click to view the winners!!</small>\n                        <br /><br />\n                        {closedContests.length ? (\n                            <ContestGrid contests={closedContests} contestDetails={winnerDetails} buttonLabel=\"Winners\" />\n                        ) : (\n                                <h3>No Results found</h3>\n                            )\n                        }\n                    </div>\n\n                }\n                {viewClicked && <ShowContestPage backToContest={backToContest} contestData={eachContest} />}\n                {viewWinners && <ShowWinnerPage backToContest={backToContest} contestData={eachContest} />}\n            </div>\n        </div>\n    )\n};\n\nexport default ContestList;","import React from \"react\";\nimport \"../../Style/AccountHeader.css\";\n\nfunction AccountHeader(props) {\n    console.log(props.userData);\n     var joiningdate = props.userData.date;\n\n    return (\n        <React.Fragment>\n            <div className=\"row banner\">\n                <div className=\"banner-text\">\n                    <h1 className=\"responsive-headline\"> {props.userData.name} </h1>\n                    <p className = \"text-center joiningText\">\n                     <strong>  Joined On:  { `${joiningdate}`.substring(0,10) }</strong>  \n                    </p>\n                </div>\n            </div>\n        </React.Fragment>\n\n    )\n}\n\nexport default AccountHeader;","import React, {  useState } from 'react'\nimport \"../../Style/PersonalData.css\"\nimport API from \"../../utils/API\";\n\nfunction AdditionalInfo(props) {    \n    const[textareaDetail,settextareaDetail] = useState(props.Desc)\n\n    function handleChange(evt) {\n        settextareaDetail(evt.target.value);\n    }\n\n    const updateDetails = (event) => {\n        event.preventDefault();\n        API.updateUserDetais({\n            description: textareaDetail\n        }).then(res => {\n            props.setDescription(res.data.description)\n        })\n    };\n\n    return (\n        <div>\n            <form className = \"form-group infoFormSection\">\n               <textarea className=\"form-control\" rows=\"6\"\n               name = \"textarea\" value = {textareaDetail} \n                onChange={handleChange} >\n                    {props.Desc}\n                </textarea>\n              \n         <button className = \"saveButton\" onClick = {updateDetails}>Save</button>\n                \n            </form>\n        </div>\n            \n     \n    );\n}\nexport default AdditionalInfo;","import React, { useState } from \"react\";\nimport \"../../Style/PersonalData.css\";\nimport AdditionalInfo from \"./AdditionalInfo\";\n\n\n\nfunction PersonalData(props) {\n    console.log(props)\n    const [InfoComponent, setInfoComponent] = useState(false);\n    const [userDescription, setComponenetUserInfo] = useState(props.userInfo.description || \"Tell us something about yourself\");\n    const showInfoComponent = () => {\n        setInfoComponent(!InfoComponent);\n    }\n\n    const setDescription = (description) => {\n        setComponenetUserInfo(description);\n        setInfoComponent(false);\n    }\n\n    return (\n        <div className=\"personalDetailsDiv\">\n            <div className=\"description desc-empty\">\n                {!InfoComponent && <i className=\" descriptionBox empty-description-handler\">{userDescription}</i>}\n                {InfoComponent && <AdditionalInfo setDescription={setDescription} Desc={userDescription} />}\n                {!InfoComponent && <button onClick={(showInfoComponent)} className=\"Fafa-pencil\">\n                    <i className=\"fa fa-pencil\" aria-hidden=\"true\"></i>\n                </button>}\n            </div>\n            <div className=\"nameDiv\">\n                <div className=\"row\">\n                    <div className=\"col-2 text-muted\"> Name </div>\n                    <div className=\"col-2 \"> {props.userInfo.name} </div>\n                    <div className=\"col-6\" />\n                </div>\n                <br></br>\n                <div className=\"row\">\n                    <div className=\"col-2 text-muted\"> Email </div>\n                    <div className=\"col-2 \"> {props.userInfo.email} </div>\n                    <div className=\"col-6\" />\n                </div>\n\n            </div>\n            <div className = \"galleryDiv\">\n                <p>Gallery </p>\n            </div>\n        </div>\n    )\n\n}\nexport default PersonalData;","import React, { useEffect, useState } from \"react\";\nimport \"../../Style/ContestForm.css\"\nimport API from \"../../utils/API\";\n\n\nfunction UpdateContestForm(props) {\n    console.log(props)\n\n    const [state, setState] = useState({\n        title: \"\",\n        description: \"\",\n        category: \"\",\n        status: \"\",\n        dueDate: \"\"\n    })\n\n    //To pre-populate form with contest details.\n    useEffect(() => {\n        API.getContestByID(props.id).then(result => {\n            console.log(result.data)\n            setState({\n                title: result.data.title,\n                description: result.data.description,\n                category: result.data.category,\n                status: result.data.status,\n                dueDate: result.data.duedate\n            });\n        })\n    }, [])\n\n    // Category list\n    const categoriesList = [\"Portrait\", \"Still Life\", \"Landscape\", \"Food\", \"Wildlife\", \"Macro\", \"Event\",\n        \"Fashion\", \"Newborn\", \"Street\", \"Sports\", \"Documentary\", \"Weather\", \"Architectural\"]\n\n    //Status List\n    const contsetStatusList = [\"Open\", \"Closed\"]\n\n    //Function to detect input change.\n    function handleChange(evt) {\n        const value = evt.target.value;\n        setState({\n            ...state,\n            [evt.target.name]: value\n        });\n    }\n    // Function to submit update form.\n    const handleUpdate = (event) => {\n        event.preventDefault();\n        API.updateContestDetails(props.id, {\n            title: state.title,\n            description: state.description,\n            category: state.category,\n            duedate: state.dueDate,\n            status: state.status\n        }).then(result => {\n            console.log(\"record updated\");\n            console.log(result.data)\n\n            props.setDescriptionDetails(result.data)\n            if (result.data.status === \"Closed\") {\n                console.log(\"CONTEST IS DONE \");\n                //make an api call to calculate the image's average rating and updating the rating for each image in images table.\n                API.getAverageRating(result.data._id)\n                    .then(dbData => {\n                        console.log(dbData.data)\n                        const contestId = dbData.data[0].contest_id;\n                        const images = dbData.data;\n                        /******\n                         *  another way of getting distinct image ids \n                            const filtered = images.map(image => image.image_id)\n                                   .filter((value, index, self) => self.indexOf(value) === index);\n                            console.log(filtered) \n                            ***********/\n                        var unique = [];\n                        var distinct = [];\n                        for (let i = 0; i < images.length; i++) {\n                            if (!unique[images[i].image_id]) {\n                                distinct.push(images[i].image_id);\n                                unique[images[i].image_id] = 1;\n                            }\n                        }\n                        var ratingsArr = [];\n                        for (let i = 0; i < distinct.length; i++) {\n                            var eachImage = images.filter(function (image) {\n                                return image.image_id == distinct[i];\n                            });\n                            //find the average of all the ratings\n                            var sum_rating = 0;\n                            for (let j = 0; j < eachImage.length; j++) {\n                                sum_rating += eachImage[j].rating;\n                            }\n                            var avg_rating = sum_rating / eachImage.length;\n\n                            console.log('==== avg rating of ' + distinct[i] + \" is \" + Math.floor(avg_rating));\n                            var imagekey = distinct[i], ratingVal = Math.floor(avg_rating);\n                            var obj={};\n                            obj[imagekey] = ratingVal;\n                            ratingsArr.push(obj);\n                        }\n\n                        const contestRatings = {\n                            contest_id: contestId,\n                            ratingsArr: ratingsArr,\n                            owner: localStorage.getItem(\"email\")\n                        }\n            \n                        API.updateAverageRating(contestRatings)\n                            .then(dbResponse => console.log(dbResponse))\n                            .catch(err => console.log(err));\n                    })\n                    .catch(err => console.log(err));\n            }\n        })\n    }\n    return (\n        <React.Fragment>\n            <div className=\"contestDetailsDiv\">\n                <h3 className=\"form-title text-center\">Contest Details</h3>\n                <hr></hr>\n                <form className=\"contestFormDiv\">\n                    <div className=\"form-group row justify-content-center contestFormInput\">\n                        <label htmlFor=\"title\" className=\"col-sm-2 col-form-label\">Title</label>\n                        <div className=\"col-sm-10 \">\n                            <input type=\"text\"\n                                name=\"title\"\n                                value={state.title}\n                                onChange={handleChange}\n                                className=\"form-control\"\n                                placeholder=\"Contest Title\"\n                            />\n                        </div>\n                    </div>\n                    <div className=\"form-group row contestFormInput\">\n                        <label htmlFor=\"description\" className=\"col-sm-2 col-form-label\">Description</label>\n                        <div className=\"col-sm-10 \">\n                            <input type=\"text\"\n                                name=\"description\"\n                                value={state.description}\n                                onChange={handleChange}\n                                className=\"form-control\"\n                                placeholder=\"Tell us something about the contest\"\n                            />\n                        </div>\n                    </div>\n                    <div className=\"form-group row contestFormInput\">\n                        <label htmlFor=\"description\" className=\"col-sm-2 col-form-label\">Category</label>\n                        <div className=\"col-sm-10 \">\n                            <select className=\"form-control\" name=\"category\"\n                                value={state.category}\n                                onChange={handleChange}\n                            >\n                                {categoriesList.map(item => {\n                                    return <option key={item + \"2\"}>{item}</option>\n                                })}\n                            </select>\n\n                        </div>\n                    </div>\n                    <div className=\"form-group row contestFormInput\">\n                        <label htmlFor=\"endDate\" className=\"col-sm-2 col-form-label\">Due Date</label>\n                        <div className=\"col-sm-10 \">\n                            <input type=\"date\"\n                                name=\"duedate\"\n                                // value = {state.dueDate}\n                                onChange={handleChange}\n                                className=\"form-control\"\n                                placeholder=\"Tell us something about the contest\"\n                            />\n                        </div>\n                    </div>\n                    <div className=\"form-group row contestFormInput\">\n                        <label htmlFor=\"description\" className=\"col-sm-2 col-form-label\">Status</label>\n                        <div className=\"col-sm-10 \">\n                            <select className=\"form-control\" name=\"status\"\n                                value={state.status}\n                                onChange={handleChange}\n                            >\n                                {contsetStatusList.map(item => {\n                                    return <option key={item}>{item}</option>\n                                })}\n                            </select>\n\n                        </div>\n                    </div>\n\n                    < div className=\"row\">\n                        <button\n                            className=\"btn btn-default contestSaveButton\"\n                            onClick={handleUpdate}\n                        >Update Contest</button>\n                    </div>\n                </form>\n            </div>\n\n\n\n\n        </React.Fragment>\n\n    )\n}\nexport default UpdateContestForm;","import React, { useEffect, useState } from \"react\"\nimport API from \"../../utils/API\";\n// import { v4 as uuidv4 } from 'uuid';\nimport update from 'react-addons-update';\nimport UpdateContestForm from \"./updateContestForm\";\n\nfunction EventsHosted() {\n//To store all contest by user\n    const [constestDetails, setContestDetails] = useState([]); \n\n    const [detail, setDetail] = useState(\"\");               //to store data of each contest\n\n    const [contestform, setcontestformt] = useState(false);//To hide&show component\n\n    useEffect(() => {\n        API.getContestByEmail().then(result => {\n            console.log(result.data);\n            setContestDetails(result.data)\n\n        })\n    }, [])\n\n    //Function to fetch contest details based on ID\n    const handlHideShow = (event) => {\n        setcontestformt(true);\n        console.log(event.target.getAttribute('custom-attribute'))\n        var id = event.target.getAttribute('custom-attribute')\n        // API.getContestByID(id).then(result =>{console.log(result.data)\n        setDetail(id);\n        // })\n    }\n    const setDescriptionDetails = (childevent) => {\n        setcontestformt(false)\n     \n        console.log(childevent);\n        var index = constestDetails.findIndex(contest => contest.id === childevent.id)\n        console.log(childevent);\n\n        setContestDetails(update(constestDetails,{\n           \n                [index]: {\n                    $set: childevent\n                \n            }\n        }));\n    }\n\n    return (\n        <div>\n            {contestform ? <UpdateContestForm\n                id={detail}\n                setDescriptionDetails={setDescriptionDetails}\n            /> : (\n                    <div className=\"container mt-5\">\n                        <table className=\"table  table-hover table-condensed\">\n                            {/* <p>{constestDetails.title}</p> */}\n                            <thead className=\"thead\">\n                                <tr>\n                                    <th className=\"col\" style={{ width: \"15%\" }}>Name</th>\n                                    <th className=\"col\" style={{ width: \"15%\" }}> Date </th>\n                                    <th className=\"col\" style={{ width: \"20%\" }} > Status </th>\n                                    <th className=\"col\"  style={{ width: \"5%\" }} > Edit </th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {constestDetails.length ? constestDetails.map(item => (\n                                    <tr key={item.id}>\n                                        <td data-th=\"Name\" className=\"name-cell align-middle\">{item.title} </td>\n                                        <td data-th=\"Email\" className=\"align-middle\" >{item.startdate.substring(0, 10)}</td>\n                                        <td data-th=\"Phone\" className=\"align-middle\">{item.status}  </td>\n                                       <td>{item.status === \"open\" &&  <button custom-attribute={item.id} onClick={handlHideShow} >\n                                            <i custom-attribute={item.id} className=\"fa fa-pencil\" aria-hidden=\"true\"></i>\n                                        </button> }</td> \n                                       \n                                    </tr>\n                                )) : (<tr><td></td><td>No result to display</td></tr>)}\n                            </tbody>\n\n                        </table>\n\n                    </div>\n                )}\n\n        </div>\n    )\n}\nexport default EventsHosted;","import React, { useEffect, useState } from \"react\";\nimport API from \"../../utils/API\";\nimport \"../../Style/participation.css\"\nfunction Participation() {\n\n    const [personalImages, setPerosnalImages] = useState([])\n\n    useEffect(() => {\n        API.getPersonalImages()\n            .then(result => {\n                console.log(result.data);\n                setPerosnalImages(result.data)\n            })\n    }, [])\n\n\n    return (\n        <React.Fragment>\n            <div className=\"participationDiv\" >\n                <div className=\"personalImageDiv\"></div>\n                    {personalImages.map(item => {\n                        return (<div class=\"col-1-4\">\n                        <img src={item.imageUrl}/>\n                      </div>)\n\n\n\n                    })}\n              \n            </div>\n        </React.Fragment>\n    )\n}\nexport default Participation;","import React, { useState } from \"react\";\n\nimport PersonalData from \"./PersonalData\";\nimport EventsHosted from \"./EventsHosted\";\nimport Participation from \"./Participation\"\nimport \"../../Style/AccountNav.css\"\n\nfunction AccountNav(props) {\n\n    var userInfo = props.userData\n    const [renderComponent, setRenderComponent] = useState(\"\");\n\n    const handleClick = (componentName) => {\n        setRenderComponent(componentName);\n        console.log(renderComponent);\n    }\n\n    const renderSubComp = (renderComponent) => {\n        switch (renderComponent) {\n            case \"personalData\":\n                return <PersonalData userInfo={userInfo} />\n            case \"eventsHosted\":\n                return <EventsHosted />\n            case \"participation\":\n                return <Participation />\n            default:\n                break;\n        }\n    }\n    return (\n        <div className=\"headerNavBar\">\n            <div className=\"accountNavBarDiv\">\n                <ul className=\"nav headerNav nav-pills nav-justified accountNavBar\">\n                    <li className=\"nav-item \" onClick={() => handleClick('personalData')}>PersonalData</li>\n                    <li className=\"nav-item text-muted\" onClick={() => handleClick('eventsHosted')}>Events-Hosted</li>\n                    <li className=\"nav-item text-muted\" onClick={() => handleClick('participation')}>Participations</li>\n                </ul>\n            </div>\n            <div className=\"personalContent\">\n                {renderSubComp(renderComponent)}\n            </div>\n\n        </div>\n    )\n}\n\n\nexport default AccountNav;","import React, { useEffect, useState } from \"react\"\nimport API from \"../../utils/API\"\nimport AccountHeader from \"./AccountHeader\";\nimport AccountNav from \"./AccountNav\";\n\n\nfunction Account() {\n    const [usersState, setuserState] = useState({\n        name: \"\",\n        email: \"\",\n        user : {}\n    });\n\n    useEffect(() => {\n        API.getUser().then(res => {\n            console.log(\"getuser data\");\n            console.log(res.data.user.email)\n            setuserState({\n                name: res.data.user.name,\n                email: res.data.user.email,\n                user:res.data.user\n            })\n        })\n            .catch(err => console.log(err))\n    }, []\n    );\n\nreturn (\n    <React.Fragment>\n        <AccountHeader userData = {usersState.user} />\n        <AccountNav userData = {usersState.user} />\n    </React.Fragment>\n)\n\n}\n\nexport default Account;","import React, { useRef } from \"react\";\nimport \"../Style/ContestForm.css\"\nimport API from \"../utils/API\";\nimport uuid from 'react-uuid'\nfunction ContestForm() {\n\n    const categoriesList = [\"Portrait\", \"Still Life\", \"Landscape\", \"Food\", \"Wildlife\", \"Macro\", \"Event\",\n        \"Fashion\", \"Newborn\", \"Street\", \"Sports\", \"Documentary\", \"Weather\", \"Architectural\"]\n\n    const titleRef = useRef();\n    const descriptionRef = useRef();\n    const categoryRef = useRef();\n    const dueDate = useRef();\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        API.createContestDetails({\n            title :   titleRef.current.value,\n            description : descriptionRef.current.value,\n            category : categoryRef.current.value.toLowerCase(),\n            duedate : dueDate.current.value,\n            id : uuid()\n        }).then(\n            res => {console.log(res.data)\n             window.location.href  = \"/contests\"\n            })\n        .catch(err => console.log(err));\n    }\n    return (\n        <React.Fragment>\n            <div className=\"row banner\"></div>\n            <div className=\"contestDetailsDiv\">\n                <h3 className=\"form-title text-center\">Contest Details</h3>\n                <hr></hr>\n                <form className=\"contestFormDiv\">\n                    <div className=\"form-group row justify-content-center contestFormInput\">\n                        <label htmlFor=\"title\" className =\"col-sm-2 col-form-label\">Title</label>\n                        <div className=\"col-sm-10 \">\n                            <input type=\"text\"\n                                className=\"form-control\"\n                                placeholder=\"Contest Title\"\n                                ref={titleRef}\n                            />\n                        </div>\n                    </div>\n                    <div className=\"form-group row contestFormInput\">\n                        <label htmlFor=\"description\" className=\"col-sm-2 col-form-label\">Description</label>\n                        <div className=\"col-sm-10 \">\n                            <input type=\"text\"\n                                className =\"form-control\"\n                                placeholder=\"Tell us something about the contest\"\n                                ref={descriptionRef}\n                            />\n                        </div>\n                    </div>\n                    <div className=\"form-group row contestFormInput\">\n                        <label htmlFor=\"description\" className=\"col-sm-2 col-form-label\">Category</label>\n                        <div className=\"col-sm-10 \">\n                            <select className=\"form-control\" ref={categoryRef}>\n                                {categoriesList.map(item => {\n                                    return <option key= {item + \"2\"}>{item}</option>\n                                })}\n                            </select>\n\n                        </div>\n                    </div>\n                    <div className=\"form-group row contestFormInput\">\n                        <label htmlFor=\"endDate\" className=\"col-sm-2 col-form-label\">Due Date</label>\n                        <div className=\"col-sm-10 \">\n                            <input type=\"date\"\n                                className=\"form-control\"\n                                placeholder=\"Tell us something about the contest\"\n                                ref={dueDate}\n                            />\n                        </div>\n                    </div>\n\n                    < div className=\"row\">\n                        <button\n                         className=\"btn btn-default contestSaveButton\"\n                         onClick = {handleSubmit}\n                         >Post Contest</button>\n                    </div>\n                </form>\n            </div>\n\n\n\n\n        </React.Fragment>\n\n    )\n}\n\nexport default ContestForm;","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nfunction ImagePage( props) {\n    const {imageUrl} = props.location.state\n    console.log(\"imageUrl \"+imageUrl)\n \n    return (\n        <div style={{backgroundColor:\"#161618\",height: \"100vh\"}} className=\"p-3\">\n            Image page\n            <br />\n            <Link to={{\n                pathname:\"/contests\"\n            }} className=\"float-right\" >Back to Contests</Link>\n         <br />\n            <img src={imageUrl} alt=\"\"></img>\n        </div>\n    )\n}\n\nexport default ImagePage\n","import React, { useState, useEffect } from 'react'\nimport API from '../utils/API';\nimport ContestGrid from './ContestGrid';\nimport ShowContestPage from \"./ShowContestPage\";\n\nfunction SearchedContests(props) {\n    console.log('--- searched --- ');\n    console.log(props.location.state.searchVal);\n    const [contests, setContests] = useState([]);\n    const [eachContest, setEachContest] = useState({});\n    const [viewClicked, setViewClicked] = useState(false);\n\n    useEffect(() => {\n        console.log('Searched for ' + props.location.state.searchVal);\n        API.searchContests(props.location.state.searchVal)\n            .then(res => {\n                console.log(res.data);\n                setContests(res.data);\n            })\n    }, [props.location.state.searchVal]);\n\n    const contestDetails = (contest) => {\n        console.log(contest);\n        setEachContest(contest);\n        setViewClicked(true);\n    }\n\n       \n    const backToContest = () => {\n        setViewClicked(false);\n        // setViewWinners(false);\n    }\n\n    return (\n        <div className=\"bgCover\">\n            <div className=\"container p-5\">\n                {!viewClicked && <div className=\"jumbotron mt-5 p-5 mx-auto justify-content-center\">\n                    {contests.length ? (\n                        <ContestGrid contests={contests} contestDetails={contestDetails} buttonLabel=\"View\" />\n                    ) : (\n                            <h3>No Results have found</h3>\n                        )\n                    }\n\n                </div>}\n                {viewClicked && <ShowContestPage backToContest={backToContest} contestData={eachContest} />}\n            </div>\n\n\n        </div>\n    )\n}\n\nexport default SearchedContests\n","import React from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport \"./App.css\";\nimport NavBar from \"./components/NavBar\";\nimport MainContent from \"./components/MainContent\";\nimport Login from \"./components/Login\";\nimport SignUp from \"./components/SignUp\";\nimport Profile from \"./components/Profile\"\nimport ContestList from \"./components/ContestList\";\nimport Account from \"./components/PersonalAcount/Account\";\nimport ContestForm from \"./components/ContestForm\";\nimport ImagePage from \"./components/ImagePage\";\nimport ShowContestPage from \"./components/ShowContestPage\";\nimport SearchedContests from \"./components/SearchedContests\";\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <NavBar />\n        <Route exact path={[\"/\", \"/main\"]} component={MainContent} />\n        <Route exact path=\"/login\" component={Login} />\n        <Route exact path=\"/signup\" component={SignUp} />\n        <Route exact path=\"/about\" component={MainContent} />\n        <Route exact path = \"/profile\"  component = {Profile} />\n        <Route exact path = \"/personalAccount\"  component = {Account} />\n        <Route exact path = \"/hostevents\"  component = {ContestForm} />\n        <Route exact path = \"/contests\"  component = {ContestList} />\n        <Route exact path = \"/image\" component = {ImagePage} />\n        <Route exact path = \"/showcontest\" component = {ShowContestPage} />\n        <Route exact path = \"/search\" component = {SearchedContests} />\n\n      </div>\n    </Router>\n  );\n}\n\n\nexport default App;","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nregisterServiceWorker();\n","module.exports = __webpack_public_path__ + \"static/media/7.f15c30e0.jpg\";"],"sourceRoot":""}