{"version":3,"sources":["Style/Img/6.jpg","Style/Img/8.jpg","Style/Img/11.jpg","Style/Img/9.jpg","Style/Img/3.jpg","components/NavListItem.js","components/NavSearchForm.js","utils/API.js","components/NavBar.js","components/Title.js","components/SignUp.js","components/MainContent.js","components/Login.js","components/Profile.js","components/UploadImage.js","components/ContestDetails.js","components/Button.js","components/ImageMasonryComponent.js","components/ImageLink.js","components/Rating/RatingStar.js","components/Rating/RatingForm.js","components/ImageGrid.js","components/ShowContestPage.js","components/ShowWinnerPage.js","components/ContestContent.js","components/ContestGrid.js","components/ContestList.js","components/PersonalAcount/AccountHeader.js","components/PersonalAcount/AdditionalInfo.js","components/PersonalAcount/PersonalData.js","components/PersonalAcount/updateContestForm.js","components/PersonalAcount/EventsHosted.js","components/PersonalAcount/Participation.js","components/PersonalAcount/AccountNav.js","components/PersonalAcount/Account.js","components/ContestForm.js","components/ImagePage.js","components/SearchedContests.js","App.js","registerServiceWorker.js","index.js","Style/Img/7.jpg"],"names":["module","exports","__webpack_require__","p","NavListItem","_ref","path","menuLabel","react_default","a","createElement","className","react_router_dom","to","window","location","pathname","NavSearchForm","inputRef","useRef","_useState","useState","_useState2","Object","slicedToArray","searchOn","setSearchOn","_useState3","_useState4","searchInput","setSearchInput","useEffect","console","log","Fragment","ref","type","placeholder","aria-label","onClick","event","preventDefault","current","value","toLowerCase","react_router","state","searchVal","API","saveUser","userDetails","axios","post","checkUser","getUser","get","saveImageDetails","imageDetails","updateUserDetais","patch","getImageDetails","contestId","getPersonalImages","logoutUser","createContestDetails","getOpenContests","getClosedContests","checkUserParticipation","user","getContestByEmail","getRating","img_id","contest_id","updateRating","ratingDetails","put","getContestByID","id","updateContestDetails","getAverageRating","updateAverageRating","contestRatings","searchContests","category","stream","require","Navbar","history","useHistory","currentPath","setcurrentPath","notification","connect","feed","listen","subscribe","data","notificationmessage","JSON","parse","new","object","NotificationManager","success","title","message","replace","redirecturl","initNotifications","then","results","activities","slice","forEach","activity","handleLogout","res","subscription","cancel","href","data-toggle","data-target","aria-controls","aria-expanded","components_NavListItem","components_NavSearchForm","style","color","lib","class","Title","displaySize","concat","SignUp","signedin","loggedIn","setloggedIn","nameRef","emailRef","passwordRef","password2Ref","bgStyle","backgroundImage","Img","email","components_Title","name","password","password2","result","localStorage","setItem","MainContent","isMainPage","setIsMainPage","showSignUp","setshowSignUp","backgrounds","Img1","Img2","Img3","Img4","height","components_SignUp","Login","Profile","images","setImages","unsplash","Unsplash","accessKey","process","categories","index","Math","floor","random","length","search","photos","orientation","toJson","json","map","img","i","key","urls","regular","src","thumb","UploadImage","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","singleFileChangedHandler","setState","selectedFile","target","files","singleFileUploadHandler","relaodTheComponet","FormData","contestid","append","headers","accept","Accept-Language","Content-Type","_boundary","response","status","error","code","ocShowAlert","uploaded","hideUploadButton","owner","getItem","imageUrl","thumbnailUrl","catch","err","background","arguments","undefined","alertContainer","document","querySelector","alertEl","textNode","createTextNode","setAttribute","$","css","appendChild","setTimeout","fadeOut","remove","selectedFiles","boxShadow","marginLeft","onChange","Component","ContestDetails","contestData","showUpload","description","duedate","Button","classNames","onClickHandler","label","masonryOptions","fitWidth","colomnWidth","gutter","ImageLink","width","alt","RatingStar","starValue","starInnerText","rating","ratingUpdateHandler","starred","htmlFor","image_id","dbData","RatingForm","setRating","newRating","setNewRating","new_rating","_id","rating_val","labelText","action","Rating_RatingStar","ImageGrid","showRating","showRatingForm","setShowRatingForm","react_masonry_component_lib_default","elementType","options","disableImagesLoaded","updateOnEachImageLoad","backgroundColor","components_ImageLink","Rating_RatingForm","ShowContestPage","backToContest","setShowUpload","_useState5","_useState6","relaodImages","setReloadImages","_useState7","_useState8","setUploaded","_useState9","_useState10","participated","setParticipated","components_ContestDetails","components_ImageGrid","components_UploadImage","components_Button","ShowWinnerPage","ContestContent","contest","contestDetails","buttonLabel","maxWidth","e","ContestGrid","contests","components_ContestContent","ContestList","setContests","closedContests","setClosedContests","eachContest","setEachContest","viewClicked","setViewClicked","viewWinners","setViewWinners","components_ContestGrid","components_ShowContestPage","components_ShowWinnerPage","AccountHeader","userData","joiningdate","date","substring","AdditionalInfo","Desc","textareaDetail","settextareaDetail","rows","evt","setDescription","PersonalData","InfoComponent","setInfoComponent","userInfo","userDescription","setComponenetUserInfo","galleryImage","setGalleryImage","PersonalAcount_AdditionalInfo","aria-hidden","image","UpdateContestForm","dueDate","handleChange","objectSpread","defineProperty","item","setDescriptionDetails","unique","distinct","push","ratingsArr","_loop","eachImage","filter","sum_rating","j","avg_rating","imagekey","ratingVal","obj","dbResponse","EventsHosted","constestDetails","setContestDetails","detail","setDetail","contestform","setcontestformt","handlHideShow","getAttribute","updateContestForm","childevent","findIndex","update","$set","data-th","startdate","custom-attribute","Participation","participationDetails","setparticipationDetails","classname","AccountNav","renderComponent","setRenderComponent","handleClick","componentName","PersonalAcount_PersonalData","PersonalAcount_EventsHosted","PersonalAcount_Participation","renderSubComp","Account","usersState","setuserState","PersonalAcount_AccountHeader","PersonalAcount_AccountNav","ContestForm","titleRef","descriptionRef","categoryRef","uuid","ImagePage","SearchedContests","App","components_NavBar","exact","component","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","ReactDOM","render","src_App","getElementById","URL","origin","addEventListener","fetch","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.37089a0e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/6.c3aa4026.jpg\";","module.exports = __webpack_public_path__ + \"static/media/8.1bb0cfda.jpg\";","module.exports = __webpack_public_path__ + \"static/media/11.831d07c5.jpg\";","module.exports = __webpack_public_path__ + \"static/media/9.6e3c6b1a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/3.410639a7.jpg\";","import React from 'react'\nimport {Link} from \"react-router-dom\";\nfunction NavListItem({ path, menuLabel }) {\n    return (\n        <li className=\"nav-item active\">\n              <Link to={path} \n                 className={\n                    window.location.pathname === {path} ? \"nav-link active\" : \"nav-link\"\n                   }>\n                  {menuLabel}\n              </Link>\n        </li>\n    )\n}\n\nexport default NavListItem\n","import React, {  useState, useRef, useEffect } from \"react\";\nimport \"../Style/NavBar.css\"\nimport { Redirect } from \"react-router-dom\";\n\nfunction NavSearchForm() {\n  \n  const inputRef = useRef();\n \n  const [searchOn, setSearchOn] =  useState(false)\n  const [searchInput, setSearchInput] = useState(\"\");\n  \n  useEffect(()=>{\n    console.log(\"Welcome\")\n    //setSearchOn(false)\n  });\n\n  const serchForAcategory = (event) => {\n    event.preventDefault();\n    console.log(\"clicked\")\n    console.log('status '+inputRef.current.value);\n    console.log(\"search on value \"+searchOn);\n    setSearchInput(inputRef.current.value.toLowerCase())\n     setSearchOn(true);\n  }\n  return (\n    <>\n    <div className=\"searchbox d-flex justify-content-center\">\n      <form className=\"form-inline\">\n        <div className=\"input-group mx-4 \">\n          <input\n            className=\"form-control navBarSearch my-lg-0\"\n             ref={inputRef}\n            // value={searchInput}\n            // onChange={onChangeHandler}\n            type=\"search\"\n            placeholder=\"Seach for any category\"\n            aria-label=\"Search\"\n          />\n          <div className=\"input-group-append\">\n            <span className=\"input-group-text\"><i className='fas fa-search' onClick={serchForAcategory}></i></span>\n          </div>\n        </div>\n      </form>\n    </div>\n    {searchOn && <Redirect to={{\n                pathname: '/search',\n                state: { searchVal: searchInput }\n            }}\n            />}\n    </>\n  );\n}\nexport default NavSearchForm;","import axios from \"axios\";\n\nexport default {\n    saveUser: function(userDetails){\n        // console.log(userDetails);\n       return axios.post(\"/api/users/signup\",userDetails);\n        \n    },\n    checkUser: function(userDetails) {\n        // console.log(userDetails);\n        return axios.post(\"/api/users/login\", userDetails);\n    },\n    getUser: function () {\n        return axios.get(\"/api/users/personalAccount\");\n    },\n    // getContests: function (req, res) {\n    //     return axios.get(\"api/contests\");\n    // },\n    saveImageDetails: function (imageDetails) {\n        console.log(\"image details are \" + imageDetails);\n        return axios.post(\"api/images/saveImage\", imageDetails);\n    },\n    updateUserDetais: function(userDetails) {\n        return axios.patch(\"/api/users/personalAccount\", userDetails);\n    },\n    // createContestDetails: function (userDetails) {\n    //     console.log(userDetails)\n    //     return axios.post(\"/api/contests/hostevents\", userDetails);\n    // },\n    getImageDetails: function (contestId){\n        console.log('contest id is '+contestId);\n        return axios.get(\"api/images/getImages/\"+contestId);\n    },\n\n    // getContestImageDetails : function(){\n    //     return axios.get(\"/api/images/personalAccount\");\n    // },\n    getPersonalImages : function(){\n        return axios.get(\"/api/images/personalAccount\");\n    },\n    logoutUser: function(){\n        return axios.get(\"/api/users/logout\")\n    },\n\n    //Contest Api\n\n    createContestDetails : function(userDetails) {\n        return axios.post(\"/api/contests/hostevents\",userDetails);\n    },\n    getOpenContests: function() {\n        return axios.get(\"/api/contests/openContests\");\n    },\n    getClosedContests: function() {\n        return axios.get(\"/api/contests/closedContests\");\n    },\n    checkUserParticipation(user,contestId){\n        //this method checks in the image collecion to check if the user passed as an argument had already uploaded an image for the contest id passed.\n        return axios.get(\"/api/images/checkUserParticipation/\"+user+\"/\"+contestId);\n    },\n    getContestByEmail: function(){\n        return axios.get(\"/api/contests/personalAccount\");\n    },\n    getRating: function(img_id,contest_id,user){\n        return axios.get(\"/api/images/getImageRating/\"+img_id+\"/\"+contest_id+\"/\"+user);\n    },\n    updateRating: function(ratingDetails){\n      console.log(ratingDetails)\n       return axios.put(\"/api/images/updateRating\",ratingDetails);\n    },\n    getContestByID :function(id){\n        return axios.get(\"/api/contests/personalAccount/\" + id)\n    },\n    updateContestDetails : function(id,userDetails){\n        return axios.patch(\"/api/contests/personalAccount/\" + id,userDetails )\n    },\n    getAverageRating : function(contest_id){\n        return axios.get(\"api/images/calcAverageRating/\"+contest_id);\n    },\n    updateAverageRating: function(contestRatings){\n        return axios.put(\"/api/images/setAvgRating\",contestRatings);\n    },\n    searchContests: function(category){\n        return axios.get(\"/api/contests/searchforAcategory/\"+category);\n    }\n}","import React, { useState, useEffect } from \"react\";\nimport NavListItem from \"./NavListItem\";\nimport { useHistory } from 'react-router-dom'\nimport \"../Style/NavBar.css\"\nimport NavSearchForm from \"./NavSearchForm\"\nimport API from \"../utils/API\";\n//import { StreamApp, NotificationDropdown  } from 'react-activity-feed';\nimport 'react-notifications/lib/notifications.css';\nimport {NotificationContainer, NotificationManager} from 'react-notifications';\nlet stream = require('getstream');\n\nfunction Navbar() {\n  const history = useHistory()\n  const [currentPath, setcurrentPath] = useState(window.location.pathname);\n  //const [notificationState, setNotificationState] = useState(false);\n\n  let userToken = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoidXBpYyJ9.k1P-ctjAM1fjTxQQATPIpwUGlEIUipaTfh_U_59goyc\"\n  let client = stream.connect('cbam34cnp437', userToken, '80330')\n  var notification = client.feed('notification', 'upic');\n  var subscription;\n\n  useEffect(() => {\n    return history.listen(location => {\n      setcurrentPath(location.pathname);\n      console.log(currentPath)\n    })\n  }, [history])\n\n  useEffect(() => {\n    //subscribe to any events\n    var subscription = notification.subscribe(function(data) {\n      let notificationmessage = JSON.parse(data.new[0].object);\n      NotificationManager.success(notificationmessage.title, notificationmessage.message, 5000,()=>{\n        window.location.replace(notificationmessage.redirecturl)\n      });\n    });\n  }, [])\n\n  const initNotifications = ()=> {\n    notification.get().then((data)=> {\n      data.results[0].activities.slice(0,5).forEach(activity => {\n        let notificationmessage = JSON.parse(activity.object);\n        NotificationManager.success(notificationmessage.title, notificationmessage.message, 5000, ()=>{\n          window.location.replace(notificationmessage.redirecturl)\n        });\n      })\n    });\n  }\n\n  const handleLogout = () =>{\n    API.logoutUser().then(res => console.log(\"Successfully logged out\"))\n    subscription.cancel();\n  }\n\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n      <div className=\"container\">\n        <a className=\"navbar-brand mb-0\" href=\"/\">uPic</a>\n\n        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarTogglerDemo02\"\n          aria-controls=\"navbarTogglerDemo02\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n        <div className=\"collapse navbar-collapse\" id=\"navbarTogglerDemo02\">\n\n        {\n          (() => {\n            switch (currentPath) {\n              case \"/\":\n              case \"/about\":\n              case \"/login\":\n              case \"/signup\":\n                return (\n                  <ul className=\"navbar-nav ml-auto mt-2 mt-lg-0 ml-auto\">\n                    <NavListItem path=\"/about\" menuLabel=\"About\" />\n                    <NavListItem path=\"/signup\" menuLabel=\"SignUp\" />\n                    <NavListItem path=\"/login\" menuLabel=\"LogIn\" />\n                  </ul>\n                );\n              case \"/profile\":\n              case \"/personalAccount\":\n              case \"/hostevents\":\n              case \"/search\":\n                return (\n                  <ul className=\"nav headerNav nav-pills nav-justified profileNav ml-auto\">\n                    <NavListItem path=\"/personalAccount\" menuLabel=\"Account\"  className =\"nav-item\"/>\n                    <NavListItem path=\"/hostevents\" menuLabel=\"HostEvent\"  className =\"nav-item\"  />\n                    <NavListItem path=\"/contests\" menuLabel=\"Contests\"  className =\"nav-item\"/>\n                    <NavSearchForm />\n                    {/* <NavListItem path=\"/notification\" menuLabel=\"HostEvent\"  className =\"nav-item\"  /> */}\n                    <li onClick = {initNotifications} className=\"nav-item active\"><h5>\n                      <i className=\"fas fa-bell mt-4\" style ={{color:\"white\"}} /></h5></li> \n                    <NavListItem path=\"/\" menuLabel=\"Logout\"  className =\"nav-item\" onClick ={handleLogout}/>\n                    \n                    <NotificationContainer/>\n                  </ul>\n                )\n              case \"/contests\":\n                return (\n                  <ul className=\"nav headerNav nav-pills nav-justified profileNav ml-auto\">\n                  <NavListItem path=\"/personalAccount\" menuLabel=\"Account\"  className =\"nav-item\"/>\n                  <NavListItem path=\"/hostevents\" menuLabel=\"HostEvent\"  className =\"nav-item\"  />\n                  <NavSearchForm />\n                  <NotificationContainer/>\n                  <li onClick = {initNotifications}  className=\"nav-item active\">\n                    <h5><i class=\"fas fa-bell mt-4\" style ={{color:\"white\"}}></i></h5>\n                    </li> \n\n                  <NavListItem path=\"/\" menuLabel=\"Logout\"  className =\"nav-item\" onClick ={handleLogout}/>\n                </ul>\n                )\n              default:\n                break;\n            }\n          })\n            ()}\n      </div>\n      </div>\n    </nav>);\n\n}\n\n\nexport default Navbar;\n","import React from 'react'\n\nfunction Title({ title, displaySize }) {\n    return (\n        // className={`container${props.fluid ? \"-fluid\" : \"\"}`}\n        <h2 className={`display-${displaySize} title`}>{title}</h2>\n\n    )\n}\n\nexport default Title\n","import React, { useState, useRef } from 'react';\nimport API from '../utils/API';\nimport { Redirect } from \"react-router-dom\";\nimport \"../Style/LogInSignUp.css\";\nimport Title from './Title';\nimport Img from '../Style/Img/6.jpg';\n\nfunction SignUp() {\n    const [loggedIn, setloggedIn] = useState({\n        signedin: false,\n        user: \"\"\n    });\n\n    const nameRef = useRef();\n    const emailRef = useRef();\n    const passwordRef = useRef();\n    const password2Ref = useRef();\n    const bgStyle = {\n        backgroundImage: \"url(\" + Img + \")\"\n    };\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        API.saveUser({\n            name: nameRef.current.value,\n            email: emailRef.current.value,\n            password: passwordRef.current.value,\n            password2: password2Ref.current.value\n        })\n            .then(result => {\n                console.log(result.data)\n                localStorage.setItem(\"email\", result.data.email);\n                setloggedIn({\n                    signedin: true,\n                    user: result.data.email\n                });\n            });\n    }\n\n    return (\n        <div className=\"bgCover\" style={bgStyle}>\n\n            {!loggedIn.signedin ?\n                (<div className=\"container p-5 signUpDiv\">\n                    <div className=\"jumbotron mt-5 p-5 w-50 mx-auto justify-content-center\">\n                        <Title title=\"Sign up for uPic\" displaySize=\"5\" />\n                        <form className=\"p-5 mx-auto\">\n                            <div className=\"form-group\">\n                                <input type=\"text\"\n                                    className=\"form-control mb-1\"\n                                    placeholder=\"User Name\"\n                                    ref={nameRef} />\n                                <input type=\"email\"\n                                    className=\"form-control mb-1\"\n                                    placeholder=\"Email\"\n                                    ref={emailRef} />\n                                <input type=\"password\"\n                                    className=\"form-control mb-1\"\n                                    placeholder=\"Password\"\n                                    ref={passwordRef} />\n                                <input type=\"password\"\n                                    className=\"form-control mb-1\"\n                                    placeholder=\"Confirm Password\"\n                                    ref={password2Ref} />\n                            </div>\n\n                            <button type=\"submit\"\n                                className=\"btn btn-secondary btn-block\"\n                                onClick={handleSubmit}>\n                                Submit\n                            </button>\n                        </form>\n                        <hr />\n                        <h6>\n                            Already a uPic member? <a href=\"/login\">Log in here</a>\n                        </h6>\n                    </div>\n\n                </div>) : (<Redirect to={{\n                    pathname: '/profile',\n                    state: { email: `${loggedIn.user}` }\n                }}\n                />)\n            }\n        </div>\n    )\n};\n\nexport default SignUp;\n","import React, { useState, useEffect } from 'react'\nimport SignUp from './SignUp';\nimport Title from './Title';\nimport Img1 from '../Style/Img/7.jpg';\nimport Img2 from '../Style/Img/8.jpg';\nimport Img3 from '../Style/Img/11.jpg';\nimport Img4 from '../Style/Img/9.jpg';\n\nfunction MainContent() {\n  const [isMainPage, setIsMainPage] = useState(true);\n  const [showSignUp, setshowSignUp] = useState(false);\n  const showSignUpPage = () => {\n    setIsMainPage(false);\n    setshowSignUp(true);\n  }\n\n  const backgrounds = [Img1, Img2, Img3, Img4];\n  let bgStyle = {\n    backgroundImage: \"url(\" + backgrounds[2] + \")\"\n  };\n  let current = 0;\n\n  const nextBackground = () => {\n    current++;\n    current = current % backgrounds.length;\n    console.log(current);\n    return bgStyle = {\n      backgroundImage: \"url(\" + backgrounds[current] + \")\"\n    };\n    // return bgStyle;\n  };\n\n  useEffect(() => {\n    // nextBackground();\n    // const interval = setInterval(nextBackground, 5000);\n    // return () => {\n    //   clearInterval(interval)\n    // }\n  }, []);\n\n  return (\n    <div className=\"mainBg\" style={bgStyle}>\n      {isMainPage &&\n        <div className=\"container homepageDiv mx-auto\" style={{ color: \"rgb(233,236,239)\", height: \"100vh\" }}>\n          <Title title=\"Get Inspired. Get Involved.\" displaySize=\"4\" />\n          <Title title=\"Join uPic Community to start a new Photo Contest.\" displaySize=\"7\" />\n          <br></br>\n          <p className=\" row lead\">\n            <button className=\"btn btn-secondary btn-lg homePageButton\"\n              onClick={showSignUpPage}>\n              Join\n            </button>\n          </p>\n        </div>}\n      {showSignUp && <SignUp />}\n    </div>\n  )\n};\n\nexport default MainContent;","import React, { useRef, useState } from 'react';\nimport API from '../utils/API';\nimport { Redirect } from \"react-router-dom\";\nimport Title from './Title';\nimport Img from '../Style/Img/7.jpg';\nimport \"../Style/LogInSignUp.css\";\n\nfunction Login() {\n    const [loggedIn, setloggedIn] = useState(false);\n    const emailRef = useRef();\n    const passwordRef = useRef();\n    const bgStyle = {\n        backgroundImage: \"url(\" + Img + \")\"\n    };\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        API.checkUser({\n            email: emailRef.current.value,\n            password: passwordRef.current.value\n        })\n            .then(result => {\n                console.log(result.data.email);\n                localStorage.setItem(\"email\", result.data.email);\n                setloggedIn(true);\n            });\n    }\n\n    return (\n        <div className=\"bgCover\" style={bgStyle}>\n            {!loggedIn &&\n                <div className=\"container p-5 loginDiv\">\n                    <div className=\"jumbotron mt-5 p-5 w-50 mx-auto justify-content-center\" >\n                        <Title title=\"Log in to uPic\" displaySize=\"5\" />\n                        <form className=\"p-5 mx-auto\">\n                            <div className=\"form-group\">\n                                <input type=\"email\"\n                                    className=\"form-control mb-1\"\n                                    placeholder=\"Email address\"\n                                    ref={emailRef} />\n                                <input type=\"password\"\n                                    className=\"form-control mb-1\"\n                                    placeholder=\"Password\"\n                                    ref={passwordRef} />\n                            </div>\n                            <button type=\"submit\"\n                                className=\"btn btn-secondary btn-block\"\n                                onClick={handleSubmit}>\n                                Login\n                            </button>\n                        </form>\n                        <hr />\n                        <h6>\n                            Not a uPic member? <a href=\"/signup\">Sign up here</a>\n                        </h6>\n                    </div>\n                </div>}\n            {loggedIn && (<Redirect to={{\n                pathname: '/profile',\n                state: { email: `${loggedIn.user}` }\n            }}\n            />)}\n        </div>\n    )\n};\n\nexport default Login;","import React, { useState, useEffect } from \"react\";\nimport \"../Style/profile.css\"\nimport Unsplash, { toJson } from 'unsplash-js';\n\n\nfunction Profile() {\n\n    const [images, setImages] = useState([]);\n    const unsplash = new Unsplash({ accessKey: process.env.REACT_APP_Unsplash_Key });\n    const categories = [\"nature\",\"pets\",\"wildlife\",\"food\",\"family\",\"world\",\"water\",\"sports\",\"random\"];\n    var index = Math.floor(Math.random() * categories.length) + 1;\n\n    useEffect(() => {\n        //load random images\n        unsplash.search.photos(categories[index], 1, 8, { orientation: \"portrait\" })\n            .then(toJson)\n            .then(json => {\n                // Your code\n                console.log(json.results)\n                setImages(json.results);\n            });\n    }, []);\n\n    return (\n        <div className=\"container jumbotron mt-2\">\n            <div className=\"row\">\n                {images.map((img, i) => {\n                    return <div className=\"col-lg-3 col-md-4 col-sm-6 border\" key={i}>\n                        <a href={img.urls.regular} className=\"thumbnail\">\n                            <img src={img.urls.thumb} />\n                        </a>\n                    </div>\n                })}\n\n            </div></div>\n\n    )\n\n}\nexport default Profile;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport $ from 'jquery';\nimport API from '../utils/API';\n\nclass UploadImage extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tselectedFile: null,\n\t\t\tselectedFiles: null,\n\t\t\tuploaded : false\n\t\t}\n\t}\n\n\tsingleFileChangedHandler = (event) => {\n\t\tthis.setState({\n\t\t\tselectedFile: event.target.files[0]\n\t\t});\n\t};\n\n\tsingleFileUploadHandler = (event) => {\n\t\tthis.props.relaodTheComponet();\n\t\tconst data = new FormData();\n\t\tconsole.log(\"--- contest id ---\"+this.props.contestid);\n\t\t// If file selected\n\t\tif (this.state.selectedFile) {\n\t\t\tdata.append('contestImage', this.state.selectedFile, this.state.selectedFile.name);\n\n\t\t\tconsole.log(\"data being sent \"+data);\n\t\t\taxios.post('/api/images/img-upload', data, {\n\t\t\t\theaders: {\n\t\t\t\t\t'accept': 'application/json',\n\t\t\t\t\t'Accept-Language': 'en-US,en;q=0.8',\n\t\t\t\t\t'Content-Type': `multipart/form-data; boundary=${data._boundary}`,\n\t\t\t\t}\n\t\t\t})\n\t\t\t\t.then((response) => {\n\t\t\t\t\tconsole.log(response.status)\n\t\t\t\t\tconsole.log(response.data)\n\t\t\t\t\tif (200 === response.status) {\n\t\t\t\t\t\t// If file size is larger than expected.\n\t\t\t\t\t\tif (response.data.error) {\n\t\t\t\t\t\t\tif ('LIMIT_FILE_SIZE' === response.data.error.code) {\n\t\t\t\t\t\t\t\tthis.ocShowAlert('Max size: 2MB', 'red');\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tconsole.log(response.data);// If not the given file type\n\t\t\t\t\t\t\t\tthis.ocShowAlert(response.data.error, 'red');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconsole.log('else block '+response.status)\n\t\t\t\t\t\t\t// Success\n\t\t\t\t\t\t\tthis.setState({uploaded : true})\n\t\t\t\t\t\t\tthis.props.hideUploadButton();\n\t\t\t\t\t\t\tthis.ocShowAlert('File Uploaded', '#008000');\n\t\t\t\t\t\t\tconst imageDetails = {\n\t\t\t\t\t\t\t\towner:localStorage.getItem(\"email\"), //who uploaded the picture\n\t\t\t\t\t\t\t\tcontestId:this.props.contestid,//In which contest\n\t\t\t\t\t\t\t\timageUrl:response.data.imageUrl,\n\t\t\t\t\t\t\t\tthumbnailUrl: response.data.thumbnailUrl\n\t\t\t\t\t\t\t\t//amazon s3 location\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tconsole.log(imageDetails)\n\t\t\t\t\t\t\tAPI.saveImageDetails(imageDetails)\n\t\t\t\t\t\t\t.then(res => {\n\t\t\t\t\t\t\t\tconsole.log(res);\n\t\t\t\t\t\t\tthis.props.relaodTheComponet();\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t.catch(err => console.log(err))\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}).catch((error) => {\n\t\t\t\t\t// If another error\n\t\t\t\t\tthis.ocShowAlert(error, 'red');\n\t\t\t\t});\n\t\t} else {\n\t\t\t// if file not selected throw error\n\t\t\tthis.ocShowAlert('Please upload file', 'red');\n\t\t}\n\t};\n\n\tocShowAlert = ( message, background = '#3089cf' ) => {\n\t\tlet alertContainer = document.querySelector( '#oc-alert-container' ),\n\t\t alertEl = document.createElement( 'div' ),\n\t\t textNode = document.createTextNode( message );\n\t\talertEl.setAttribute( 'class', 'oc-alert-pop-up' );\n\t\t$( alertEl ).css( 'background', background );\n\t\talertEl.appendChild( textNode );\n\t\talertContainer.appendChild( alertEl );\n\t\tsetTimeout( function () {\n\t\t $( alertEl ).fadeOut( 'slow' );\n\t\t $( alertEl ).remove();\n\t\t}, 3000 );\n\t   };\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"container w-50\">\n\t\t\t\t  {/* For Alert box*/}\n\t\t\t\t  <div id=\"oc-alert-container\" className=\"p-2\"></div>\n\t\t\t\t{/* Single File Upload*/}\n\t\t\t\t{!this.state.uploaded && <div className=\"card border-light mb-3 mt-5\" style={{ boxShadow: '0 5px 10px 2px rgba(195,192,192,.5)' }}>\n\t\t\t\t\t<div className=\"card-header\">\n\t\t\t\t\t\t<h4 style={{ color: '#555', marginLeft: '12px' }}>Upload a Wonderful Pic !!</h4>\n\t\t\t\t\t\t<p className=\"text-muted\" style={{ marginLeft: '12px' }}>Upload Size: 250px x 250px ( Max 2MB )</p>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"card-body\">\n                        <input\n                            type=\"file\" \n                            onChange={this.singleFileChangedHandler} \n                            className=\"text-center\"\n                            />\n\t\t\t\t\t\t<div className=\"mt-5\">\n\t\t\t\t\t\t\t<button className=\"btn btn-info\" onClick={this.singleFileUploadHandler}>Upload!</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>}\n\t\t\t\t{this.state.uploaded && <h4>Thanks for the participation!!</h4>}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default UploadImage;","import React from 'react'\n\nfunction ContestDetails({contestData, showUpload}) {\n    return (\n        <div>\n              <h3>{contestData.title}</h3>\n             <p className=\"font-italic\">{contestData.description}</p>\n             <p>Host: {contestData.owner}</p>\n            <p>Due on: {contestData.duedate}</p>\n            {!showUpload && <p>Wanna Participate !!?</p>}\n        </div>\n    )\n}\n\nexport default ContestDetails\n","import React from 'react'\n\nfunction Button({classNames, onClickHandler, label }) {\n    return (\n        <button\n            className={classNames}\n            onClick={onClickHandler}\n        >{label}</button>\n    )\n}\n\nexport default Button\n","export const masonryOptions = {\n    fitWidth : true,\n    colomnWidth: 200,\n    gutter: 5\n}","import React from 'react'\nimport { Link } from 'react-router-dom';\n\nfunction ImageLink({imageUrl, thumbnailUrl}) {\n    return (\n        <Link to={{\n            pathname:\"/image\",\n            state:{\n                imageUrl : imageUrl}\n        }\n        }> <img\n        src={thumbnailUrl}\n        style={{ width: 320 }}\n        alt=\"Contest images\" /> </Link>\n    )\n}\n\nexport default ImageLink\n","import React from 'react'\nimport API from \"../../utils/API\";\n\nfunction RatingStar( {id, starValue, starInnerText, rating, contestId, ratingUpdateHandler} ) {\n\n    console.log(`rating = ${rating} stravalue = ${starValue}`)\n    const starred = (rating>=starValue) ? true : false ;\n    console.log(\"starred value \"+starred);\n    function updateRating(event) {\n        console.log(\"--id --\" + id);\n        console.log(starValue)\n        const ratingDetails = {\n            image_id : id,\n            contest_id: contestId, // NEEDS TO BE DYNAMIC\n            user:localStorage.getItem(\"email\"),\n            rating  : starValue\n        }\n        API.updateRating(ratingDetails)\n           .then(dbData => {\n               console.log(dbData.data.rating);\n               ratingUpdateHandler(dbData.data.rating);\n            })\n           .catch(err => console.log(err));\n    }\n\n    return (\n        <>\n            <input className=\"visuallyhidden\" type=\"radio\" name=\"rating\" id={id} value={starValue} />\n            <label htmlFor={id}\n                    onClick={updateRating}\n                    >\n                <span className=\"visuallyhidden\">{starInnerText}</span>\n                <i className={starred ? \"fa-star fas\" : \"fa-star far\"} style={{color:\"\t#D4AF37\"}}></i>\n            </label>\n        </>\n    )\n}\nexport default RatingStar\n\n","import React,{useState, useEffect} from 'react'\nimport \"../../Style/RatingForm.css\";\nimport RatingStar from './RatingStar';\nimport API from \"../../utils/API\";\n\nfunction RatingForm({ img, i, contestId}) {\n\nconst [rating, setRating] = useState(0);\nconst [newRating, setNewRating ] = useState(0);\n\nconst ratingUpdateHandler = (new_rating) => {\n    console.log(\"Updated Rating \"+new_rating);\n    setNewRating(new_rating);\n}\n    useEffect(()=>{\n        //get rating value for this particular image id, contest id and user combination from ratings collection\n        getRatingFromDb();\n    },[newRating]);\n\n    \n    function getRatingFromDb() {\n        API.getRating(img._id, contestId, localStorage.getItem(\"email\"))\n            .then(dbData => {\n                console.log(dbData.data[0].rating);\n                const rating_val = dbData.data[0].rating;\n                if (rating_val > 0) {\n                    setRating(rating_val);\n                }\n                // setRating()\n            })\n            .catch(err => console.log(err));\n    }\n\n    console.log(img)\n    console.log(\"image sent \"+img._id);\n    console.log(\"i \"+i);\n    const labelText = {\n        1: \"One Star\",\n        2: \"Two Stars\",\n        3: \"Three Stars\",\n        4: \"Four Stars\",\n        5: \"Five Stars\"\n      };\n    return (\n        <form action=\"post\">\n             <RatingStar  id={img._id} starValue=\"1\" starInnerText={labelText[1]} rating={rating} contestId={contestId}\n                          ratingUpdateHandler={ratingUpdateHandler}/>\n             <RatingStar  id={img._id} starValue=\"2\" starInnerText={labelText[2]} rating={rating} contestId={contestId}\n                          ratingUpdateHandler={ratingUpdateHandler}/>\n             <RatingStar  id={img._id} starValue=\"3\" starInnerText={labelText[3]} rating={rating} contestId={contestId}\n                          ratingUpdateHandler={ratingUpdateHandler}/>\n             <RatingStar  id={img._id} starValue=\"4\" starInnerText={labelText[4]} rating={rating} contestId={contestId}\n                          ratingUpdateHandler={ratingUpdateHandler}/>\n             <RatingStar  id={img._id} starValue=\"5\" starInnerText={labelText[5]} rating={rating} contestId={contestId}\n                          ratingUpdateHandler={ratingUpdateHandler}/>\n        </form>\n    )\n\n}\n\nexport default RatingForm\n","import React, {useState, useEffect} from 'react'\nimport Masonry from 'react-masonry-component';\nimport { masonryOptions } from \"./ImageMasonryComponent\";\nimport ImageLink from './ImageLink';\nimport RatingForm from './Rating/RatingForm';\n\n\nfunction ImageGrid({images, contestId, showRating}) {\n\n    const [showRatingForm, setShowRatingForm] = useState(false);\n    useEffect(()=>{\n        if(showRating){\n            setShowRatingForm(true);\n        }\n    },[])\n    return (\n        <>\n              <Masonry\n                className={\"grid\"}\n                elementType={\"div\"}\n                options={masonryOptions}\n                disableImagesLoaded={false}\n                updateOnEachImageLoad={false}\n            >\n                {images.map((img, i) => {\n                    return (\n                        <div className=\"pb-0\" style={{backgroundColor:\"rgb(108,117,125)\"}} key={i}>\n                            <ImageLink imageUrl={img.imageUrl} thumbnailUrl={img.thumbnailUrl}/>\n                           {showRatingForm && <RatingForm img={img} i={i} contestId={contestId}/>}\n                        </div>\n                    )\n                })}\n            </Masonry>\n\n        </>\n    )\n}\n\nexport default ImageGrid\n","import React, { useState, useEffect } from 'react'\nimport UploadImage from './UploadImage'\nimport ContestDetails from \"./ContestDetails\";\nimport Button from './Button';\nimport API from '../utils/API';\nimport Title from './Title';\nimport ImageGrid from './ImageGrid';\n\nfunction ShowContestPage({ backToContest, contestData }) {\n\n    const [showUpload, setShowUpload] = useState(false);\n    const [images, setImages] = useState([]);\n    const [relaodImages, setReloadImages] = useState(false);\n    const [uploaded, setUploaded] = useState(false);\n    const [participated, setParticipated] = useState(false);\n\n    const handleUpload = () => {\n        //check if the user has already participated in this contest \n        API.checkUserParticipation(localStorage.getItem(\"email\"), contestData._id)\n            .then(res => {\n                console.log(res.data.length);\n                if (res.data.length > 0) {\n                    console.log(\"Particpated\")\n                    setParticipated(true);\n                } else {\n                    console.log(\"Not Participated \")\n                    setParticipated(false);\n                }\n            }).catch(err => console.log(err));\n        setShowUpload(!showUpload);\n    };\n\n    const relaodTheComponet = () => {\n        setReloadImages(!relaodImages);\n    }\n\n    const hideUploadButton = () => {\n        setUploaded(true);\n    }\n    useEffect(() => {\n        //load the images from the database on page load\n        API.getImageDetails(contestData._id)\n            .then(res => {\n                console.log(res.data);\n                setImages(res.data);\n            })\n            .catch(err => console.log(err))\n    }, [relaodImages]);\n\n    return (\n\n        <div className=\"jumbotron border m-1\">\n\n            <ContestDetails contestData={contestData} showUpload={showUpload} />\n\n            {/* Display Images grid, which are already added to the contest by all the other users */}\n            <ImageGrid images={images} contestId={contestData._id} showRating={true}/>\n\n            {showUpload && !participated && \n                <UploadImage contestid={contestData._id} relaodTheComponet={relaodTheComponet} hideUploadButton={hideUploadButton} />}\n\n            {!uploaded && !participated && \n                <div className=\"d-flex justify-content-center\">\n                    <Button classNames=\"mx-auto border btn btn-primary\" onClickHandler={handleUpload} label=\"Upload a Pic\" />\n                </div>}\n\n            {participated && <Title title=\"You have already uploaded a wonderul picture !!\" displaySize=\"5\" />}\n\n            <br />\n\n            <Button classNames=\"mt-1 btn btn-primary\" onClickHandler={backToContest} label=\"Contests\" />\n        </div>\n\n    )\n}\n\nexport default ShowContestPage\n","import React,{useEffect,useState} from 'react'\nimport Button from './Button';\nimport API from '../utils/API';\nimport ImageGrid from './ImageGrid';\n\nfunction ShowWinnerPage({ backToContest, contestData }) {\n\n    const [images, setImages] = useState([]);\n\n    console.log(\"Contest Details \"+contestData.title)\n    useEffect(() => {\n        //load the images from the database on page load\n        API.getImageDetails(contestData._id)\n            .then(res => {\n                console.log(res.data);\n                setImages(res.data);\n            })\n            .catch(err => console.log(err));\n    },[]);\n    return (\n        <div>\n            <h1>{contestData.title}</h1>\n            <ImageGrid images={images} contestId={contestData._id} showRating={false}/>\n            <Button classNames=\"mt-1 btn btn-primary\" onClickHandler={backToContest} label=\"Contests\" />\n        </div>\n    )\n}\n\nexport default ShowWinnerPage\n","import React from 'react'\n\nfunction ContestContent({contest, contestDetails, buttonLabel}) {\n    return (\n        <div className=\"card h-100 border-secondary\" style={{ \"maxWidth\": \"18rem\" }}>\n            <div className=\"card-body\">\n                <h5 className=\"card-title\">{contest.title}</h5>\n                <p className=\"card-text \">{contest.description}</p>\n            </div>\n            <div className=\"card-footer\">\n                <a href=\"/about\"\n                    className=\"btn btn-secondary\"\n                    onClick={(e) => {\n                        e.preventDefault();\n                        contestDetails(contest);\n                    }}>\n                    {buttonLabel}\n            </a>\n            </div>\n        </div>\n    )\n}\n\nexport default ContestContent\n","import React from 'react'\nimport ContestContent from './ContestContent';\n\nfunction ContestGrid({contests, contestDetails, buttonLabel}) {\n    return (\n        <div className=\"list-overflow-container\">\n        <div className=\"row\">\n            {contests.map(contest => {                \n                    return (\n                        <div className=\"col-lg-4 col-md-6 mb-4\" key={contest._id}>\n                            <ContestContent contest={contest} contestDetails={contestDetails} buttonLabel={buttonLabel} />\n                        </div>\n                    )\n            }\n            )}\n        </div>\n    </div>\n    )\n}\n\nexport default ContestGrid\n","import React, { useState, useEffect } from 'react'\nimport API from \"../utils/API\";\nimport Title from './Title';\nimport ShowContestPage from \"./ShowContestPage\";\nimport \"../Style/Events.css\";\nimport ShowWinnerPage from './ShowWinnerPage';\nimport ContestGrid from './ContestGrid';\n\nfunction ContestList() {\n    const [contests, setContests] = useState([]);\n    const [closedContests, setClosedContests] = useState([]);\n    const [eachContest, setEachContest] = useState({});\n    const [viewClicked, setViewClicked] = useState(false);\n    const [viewWinners, setViewWinners] = useState(false);\n\n    useEffect(() => {\n        API.getOpenContests()\n            .then(res => {\n                console.log(res.data);\n                setContests(res.data);\n            })\n            .catch(err => console.log(err))\n    }, []);\n    useEffect(() => {\n        API.getClosedContests()\n            .then(res => {\n                console.log(res.data);\n                setClosedContests(res.data);\n            })\n            .catch(err => console.log(err))\n    }, []);\n\n    const contestDetails = (contest) => {\n        console.log(contest);\n        setEachContest(contest);\n        setViewClicked(true);\n    }\n\n    const winnerDetails = (contest) => {\n        setViewWinners(true);\n        setEachContest(contest)\n    }\n\n    const backToContest = () => {\n        setViewClicked(false);\n        setViewWinners(false);\n    }\n\n    return (\n        <div className=\"bgCover\">\n            <div className=\"container p-5\">\n                {!viewWinners && !viewClicked &&\n                    <div className=\"jumbotron mt-5 p-5 mx-auto justify-content-center\">\n                        <Title title=\"Happening Contests\" displaySize=\"5\" />\n                        <small>Click to upload and rate the pictures !!</small>\n                        <br /><br />\n                        {contests.length ? (\n                            <ContestGrid contests={contests} contestDetails={contestDetails} buttonLabel=\"View\" />\n                        ) : (\n                                <h3>No Results found</h3>\n                            )\n                        }\n                        <br />\n                        <Title title=\"Past Contests\" displaySize=\"5\" />\n                        <small>click to view the winners!!</small>\n                        <br /><br />\n                        {closedContests.length ? (\n                            <ContestGrid contests={closedContests} contestDetails={winnerDetails} buttonLabel=\"Winners\" />\n                        ) : (\n                                <h3>No Results found</h3>\n                            )\n                        }\n                    </div>\n\n                }\n                {viewClicked && <ShowContestPage backToContest={backToContest} contestData={eachContest} />}\n                {viewWinners && <ShowWinnerPage backToContest={backToContest} contestData={eachContest} />}\n            </div>\n        </div>\n    )\n};\n\nexport default ContestList;","import React from \"react\";\nimport \"../../Style/AccountHeader.css\";\n\nfunction AccountHeader(props) {\n    console.log(props.userData);\n     var joiningdate = props.userData.date;\n\n    return (\n        <React.Fragment>\n            <div className=\"row banner\">\n                <div className=\"banner-text\">\n                    <h1 className=\"responsive-headline respHeader\"> {props.userData.name} </h1>\n                    <p className = \"text-center joiningText\">\n                     Joined On:  { `${joiningdate}`.substring(0,10) }\n                    </p>\n                </div>\n            </div>\n        </React.Fragment>\n\n    )\n}\n\nexport default AccountHeader;","import React, {  useState } from 'react'\nimport \"../../Style/PersonalData.css\"\nimport API from \"../../utils/API\";\n\nfunction AdditionalInfo(props) {    \n    const[textareaDetail,settextareaDetail] = useState(props.Desc)\n\n    function handleChange(evt) {\n        settextareaDetail(evt.target.value);\n    }\n\n    const updateDetails = (event) => {\n        event.preventDefault();\n        API.updateUserDetais({\n            description: textareaDetail\n        }).then(res => {\n            props.setDescription(res.data.description)\n        })\n    };\n\n    return (\n        <div>\n            <form className = \"form-group infoFormSection\">\n               <textarea className=\"form-control\" rows=\"6\"\n               name = \"textarea\" value = {textareaDetail} \n                onChange={handleChange} >\n                    {props.Desc}\n                </textarea>\n              \n         <button className = \"saveButton\" onClick = {updateDetails}>Save</button>\n                \n            </form>\n        </div>\n            \n     \n    );\n}\nexport default AdditionalInfo;","import React, { useState, useEffect } from \"react\";\nimport \"../../Style/PersonalData.css\";\nimport AdditionalInfo from \"./AdditionalInfo\";\nimport Masonry from 'react-masonry-component';\nimport { masonryOptions } from \"../ImageMasonryComponent\";\nimport API from \"../../utils/API\";\nimport { Link } from 'react-router-dom';\n\n\nfunction PersonalData(props) {\n    console.log(props)\n    const [InfoComponent, setInfoComponent] = useState(false);\n    const [userDescription, setComponenetUserInfo] = useState(props.userInfo.description || \"Tell us something about yourself\");\n    const [galleryImage, setGalleryImage] = useState([]);\n\n    const showInfoComponent = () => {\n        setInfoComponent(!InfoComponent);\n    }\n\n    useEffect(() => {\n        API.getPersonalImages().then(result => {\n            console.log(result.data);\n            setGalleryImage(result.data);\n        })\n    }, [])\n\n    const setDescription = (description) => {\n        setComponenetUserInfo(description); \n        setInfoComponent(false);\n    }\n\n    return (\n        <section className = \"maneDiv\">\n         <br></br>\n        <div className=\"personalDetailsDiv col-12\">\n            <div className=\"description desc-empty\">\n                {!InfoComponent && <i className=\" descriptionBox empty-description-handler\">{userDescription}</i>}\n                {InfoComponent && <AdditionalInfo setDescription={setDescription} Desc={userDescription} />}\n                {!InfoComponent && <button onClick={(showInfoComponent)} className=\"Fafa-pencil\">\n                    <i className=\"fa fa-pencil\" aria-hidden=\"true\"></i>\n                </button>}\n            </div>\n            <div className=\"nameDiv\">\n                <div className=\"row\">\n                    <div className=\"col-2 text-muted\"> Name </div>\n                    <div className=\"col-2 \"> {props.userInfo.name} </div>\n                    <div className=\"col-6\" />\n                </div>\n                <br></br>\n                <div className=\"row\">\n                    <div className=\"col-2 text-muted\"> Email </div>\n                    <div className=\"col-2 \"> {props.userInfo.email} </div>\n                    <div className=\"col-6\" />\n                </div>\n\n            </div>\n            <div className=\"galleryDiv\">\n                <h6 id = \"h5Div\">Gallery</h6>\n                <br></br>\n                <Masonry  \n                className={\"grid\"}\n                elementType={\"div\"}\n                options={masonryOptions}\n                disableImagesLoaded={false}\n                updateOnEachImageLoad={false} >\n\n                {galleryImage.map((img ,i) =>{\n                  return(\n                    <div key={i}>\n                    <img\n                        className=\"personalGalleryImg\"\n                        src={img.image.thumbnailUrl}\n                        alt=\"Contest images\" />\n                    \n                </div>\n                \n                  ) \n            \n        }\n        )}\n         \n                </Masonry>\n            </div>\n        </div>\n        </section>\n\n    )\n\n}\nexport default PersonalData;","import React, { useEffect, useState } from \"react\";\nimport \"../../Style/ContestForm.css\"\nimport API from \"../../utils/API\";\n\n\nfunction UpdateContestForm(props) {\n    console.log(props)\n\n    const [state, setState] = useState({\n        title: \"\",\n        description: \"\",\n        category: \"\",\n        status: \"\",\n        dueDate: \"\"\n    })\n\n    //To pre-populate form with contest details.\n    useEffect(() => {\n        API.getContestByID(props.id).then(result => {\n            console.log(result.data)\n            setState({\n                title: result.data.title,\n                description: result.data.description,\n                category: result.data.category,\n                status: result.data.status,\n                dueDate: result.data.duedate\n            });\n        })\n    }, [])\n\n    // Category list\n    const categoriesList = [\"Portrait\", \"Still Life\", \"Landscape\", \"Food\", \"Wildlife\", \"Macro\", \"Event\",\n        \"Fashion\", \"Newborn\", \"Street\", \"Sports\", \"Documentary\", \"Weather\", \"Architectural\"]\n\n    //Status List\n    const contsetStatusList = [\"Open\", \"Closed\"]\n\n    //Function to detect input change.\n    function handleChange(evt) {\n        const value = evt.target.value;\n        setState({\n            ...state,\n            [evt.target.name]: value\n        });\n    }\n    // Function to submit update form.\n    const handleUpdate = (event) => {\n        event.preventDefault();\n        API.updateContestDetails(props.id, {\n            title: state.title,\n            description: state.description,\n            category: state.category,\n            duedate: state.dueDate,\n            status: state.status\n        }).then(result => {\n            console.log(\"record updated\");\n            console.log(result.data)\n\n            props.setDescriptionDetails(result.data)\n            if (result.data.status === \"Closed\") {\n                console.log(\"CONTEST IS DONE \");\n                //make an api call to calculate the image's average rating and updating the rating for each image in images table.\n                API.getAverageRating(result.data._id)\n                    .then(dbData => {\n                        console.log(dbData.data)\n                        const contestId = dbData.data[0].contest_id;\n                        const images = dbData.data;\n                        /******\n                         *  another way of getting distinct image ids \n                            const filtered = images.map(image => image.image_id)\n                                   .filter((value, index, self) => self.indexOf(value) === index);\n                            console.log(filtered) \n                            ***********/\n                        var unique = [];\n                        var distinct = [];\n                        for (let i = 0; i < images.length; i++) {\n                            if (!unique[images[i].image_id]) {\n                                distinct.push(images[i].image_id);\n                                unique[images[i].image_id] = 1;\n                            }\n                        }\n                        var ratingsArr = [];\n                        for (let i = 0; i < distinct.length; i++) {\n                            var eachImage = images.filter(function (image) {\n                                return image.image_id === distinct[i];\n                            });\n                            //find the average of all the ratings\n                            var sum_rating = 0;\n                            for (let j = 0; j < eachImage.length; j++) {\n                                sum_rating += eachImage[j].rating;\n                            }\n                            var avg_rating = sum_rating / eachImage.length;\n\n                            console.log('==== avg rating of ' + distinct[i] + \" is \" + Math.floor(avg_rating));\n                            var imagekey = distinct[i], ratingVal = Math.floor(avg_rating);\n                            var obj = {};\n                            obj[imagekey] = ratingVal;\n                            ratingsArr.push(obj);\n                        }\n\n                        const contestRatings = {\n                            contest_id: contestId,\n                            ratingsArr: ratingsArr,\n                            owner: localStorage.getItem(\"email\")\n                        }\n\n                        API.updateAverageRating(contestRatings)\n                            .then(dbResponse => console.log(dbResponse))\n                            .catch(err => console.log(err));\n                    })\n                    .catch(err => console.log(err));\n            }\n        })\n    }\n    return (\n        <React.Fragment>\n            <div className=\"contestUpdateDetailsDiv\">\n                <h3 className=\"form-title text-center\">Update Contest</h3>\n                <hr></hr>\n                <br></br>\n                <form className=\"UpdateFormDiv\">\n                    <div className=\"form-group row justify-content-center contestFormInput\">\n                        <label htmlFor=\"title\" className=\"col-sm-2 col-form-label updateLabel\">Title</label>\n                        <div className=\"col-sm-10 \">\n                            <input type=\"text\"\n                                name=\"title\"\n                                value={state.title}\n                                onChange={handleChange}\n                                className=\"form-control\"\n                                placeholder=\"Contest Title\"\n                            />\n                        </div>\n                    </div>\n                    <div className=\"form-group row contestFormInput\">\n                        <label htmlFor=\"description\" className=\"col-sm-2 col-form-label updateLabel\">Description</label>\n                        <div className=\"col-sm-10 \">\n                            {/* <input type=\"text\"\n                                name=\"description\"\n                                value={state.description}\n                                onChange={handleChange}\n                                className=\"form-control\"\n                                placeholder=\"Tell us something about the contest\"\n                            /> */}\n\n                            <textarea className=\"form-control\" rows=\"3\"\n                                name=\"textarea\" value={state.description}\n                                onChange={handleChange}\n                                placeholder=\"Tell us something about the contest\"\n                                name=\"description\">\n                            </textarea>\n                        </div>\n                    </div>\n                    <div className=\"form-group row contestFormInput\">\n                        <label htmlFor=\"description\" className=\"col-sm-2 col-form-label updateLabel\">Category</label>\n                        <div className=\"col-sm-10 \">\n                            <select className=\"form-control\" name=\"category\"\n                                value={state.category}\n                                onChange={handleChange}\n                            >\n                                {categoriesList.map(item => {\n                                    return <option key={item + \"2\"}>{item}</option>\n                                })}\n                            </select>\n\n                        </div>\n                    </div>\n                    <div className=\"form-group row contestFormInput\">\n                        <label htmlFor=\"endDate\" className=\"col-sm-2 col-form-label updateLabel\">DueDate</label>\n                        <div className=\"col-sm-10 \">\n                            <input type=\"date\"\n                                name=\"duedate\"\n                                // value = {state.dueDate}\n                                onChange={handleChange}\n                                className=\"form-control\"\n                                placeholder=\"Tell us something about the contest\"\n                            />\n                        </div>\n                    </div>\n                    <div className=\"form-group row contestFormInput\">\n                        <label htmlFor=\"description\" className=\"col-sm-2 col-form-label updateLabel\">Status</label>\n                        <div className=\"col-sm-10 \">\n                            <select className=\"form-control\" name=\"status\"\n                                value={state.status}\n                                onChange={handleChange}\n                            >\n                                {contsetStatusList.map(item => {\n                                    return <option key={item}>{item}</option>\n                                })}\n                            </select>\n\n                        </div>\n                    </div>\n\n                    < div className=\"row\">\n                        <button\n                            className=\"btn btn-default contestSaveButton\"\n                            onClick={handleUpdate}\n                        >Update Contest</button>\n                    </div>\n                </form>\n            </div>\n\n\n\n\n        </React.Fragment>\n\n    )\n}\nexport default UpdateContestForm;","import React, { useEffect, useState } from \"react\"\nimport API from \"../../utils/API\";\nimport \"../../Style/EventsHosted.css\";\nimport update from 'react-addons-update';\nimport UpdateContestForm from \"./updateContestForm\";\n\nfunction EventsHosted() {\n//To store all contest by user\n    const [constestDetails, setContestDetails] = useState([]); \n\n    const [detail, setDetail] = useState(\"\");               //to store data of each contest\n\n    const [contestform, setcontestformt] = useState(false);//To hide&show component\n\n    useEffect(() => {\n        API.getContestByEmail().then(result => {\n            console.log(result.data);\n            setContestDetails(result.data)\n\n        })\n    }, [])\n\n    //Function to fetch contest details based on ID\n    const handlHideShow = (event) => {\n        setcontestformt(true);\n        console.log(event.target.getAttribute('custom-attribute'))\n        var id = event.target.getAttribute('custom-attribute')\n        // API.getContestByID(id).then(result =>{console.log(result.data)\n        setDetail(id);\n        // })\n    }\n    const setDescriptionDetails = (childevent) => {\n        setcontestformt(false)\n     \n        console.log(childevent);\n        var index = constestDetails.findIndex(contest => contest.id === childevent.id)\n        console.log(childevent);\n\n        setContestDetails(update(constestDetails,{\n           [index]: {\n                $set: childevent\n             }\n        }));\n    }\n    return (\n        <section className = \"maneDiv\">\n        <div>\n           \n         <br></br>\n            {contestform ? <UpdateContestForm\n                id={detail}\n                setDescriptionDetails={setDescriptionDetails}\n            /> : (\n                    <div className=\"container tabelDiv mt-5\">\n                        <table className=\"table  table-hover hostEventTable table-condensed\">\n                            {/* <p>{constestDetails.title}</p> */}\n                            <thead className=\"thead\">\n                                <tr>\n                                    <th className=\"col\" style={{ width: \"15%\" }}>Name</th>\n                                    <th className=\"col\" style={{ width: \"15%\" }}> Date </th>\n                                    <th className=\"col\" style={{ width: \"20%\" }} > Status </th>\n                                    <th className=\"col\"  style={{ width: \"5%\" }} > Edit </th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {constestDetails.length ? constestDetails.map(item => (\n                                    <tr key={item.id}>\n                                        <td data-th=\"Name\" className=\"name-cell align-middle\">{item.title} </td>\n                                        <td data-th=\"Email\" className=\"align-middle\" >{item.startdate.substring(0, 10)}</td>\n                                        <td data-th=\"Phone\" className=\"align-middle\">{item.status}  </td>\n                                       <td>{item.status === \"Open\" &&  <button custom-attribute={item.id} onClick={handlHideShow} >\n                                            <i custom-attribute={item.id} className=\"fa fa-pencil\" aria-hidden=\"true\"></i>\n                                        </button> }</td> \n                                       \n                                    </tr>\n                                )) : (<tr><td></td><td>No result to display</td></tr>)}\n                            </tbody>\n\n                        </table>\n\n                    </div>\n                )}\n                    </div>\n   </section>\n    \n     \n    )\n}\nexport default EventsHosted;","import React, { useEffect, useState } from \"react\";\nimport API from \"../../utils/API\";\nimport \"../../Style/participation.css\"\nfunction Participation() {\n\n    const [participationDetails, setparticipationDetails] = useState([])\n\n    useEffect(() => {\n        API.getPersonalImages()\n            .then(result => {\n                console.log(result.data);\n                setparticipationDetails(result.data)\n            })\n    }, [])\n\n\n    return (\n        <section className = \"maneDiv\">\n            <br></br>\n            <div className=\"participationDiv\" >\n            <div className=\"container tabelDiv  participationDiv mt-5\">\n                        <table className=\"table  table-hover participationTable table-condensed\">\n                            {/* <p>{constestDetails.title}</p> */}\n                            <thead className=\"thead\">\n                                <tr>\n                                    <th className=\"col\" style={{ width: \"15%\" }}>Name</th>\n                                    <th className=\"col\" style={{ width: \"15%\" }}>Date</th>\n                                    <th className=\"col\" style={{ width: \"20%\" }}>Status</th>\n                                    <th className=\"col\"  style={{ width: \"5%\" }}> Picture Uploaded</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {participationDetails.length ? participationDetails.map(item => (\n                                    <tr key={item.image.contestId}>\n                                        <td  className=\"name-cell align-middle\">{item.contest.title} </td>\n                                        <td  className=\"align-middle\">{item.contest.startdate.substring(0, 10)}  </td>\n                                        <td  className=\"align-middle\">{item.contest.status}  </td>\n                                        <td  className=\"align-middle\" >\n                                           <a href = {item.image.imageUrl}   target = \"_blank\"> <img  classname =\"participationThumbnail\" src = {item.image.thumbnailUrl}  /> </a>\n                                            </td>\n                                    </tr>\n                                )) : (<tr><td></td><td>No result to display</td></tr>)}\n                            </tbody>\n\n                        </table>\n\n                    </div>\n              \n            </div>\n        </section>\n    )\n}\nexport default Participation;","import React, { useState } from \"react\";\n\nimport PersonalData from \"./PersonalData\";\nimport EventsHosted from \"./EventsHosted\";\nimport Participation from \"./Participation\"\nimport \"../../Style/AccountNav.css\"\n\nfunction AccountNav(props) {\n\n    var userInfo = props.userData\n    const [renderComponent, setRenderComponent] = useState(\"personalData\");\n\n    const handleClick = (componentName) => {\n        setRenderComponent(componentName);\n        console.log(renderComponent);\n    }\n\n    const renderSubComp = (renderComponent) => {\n        switch (renderComponent) {\n            case \"personalData\":\n                return <PersonalData userInfo={userInfo} />\n            case \"eventsHosted\":\n                return <EventsHosted />\n            case \"participation\":\n                return <Participation />\n            default:\n                break;\n        }\n    }\n    return (\n        <div className=\"headerNavBar\">\n            <div className=\"accountNavBarDiv\">\n                <ul className=\"nav headerNav nav-pills nav-justified accountNavBar\">\n                    <li className=\"nav-item headerNavItem\" onClick={() => handleClick('personalData')}>PersonalData</li>\n                    <li className=\"nav-item headerNavItem\" onClick={() => handleClick('eventsHosted')}>Events-Hosted</li>\n                    <li className=\"nav-item headerNavItem\" onClick={() => handleClick('participation')}>Participations</li>\n                </ul>\n            </div>\n            <div className=\"personalContent\">\n                {renderSubComp(renderComponent)}\n            </div>\n\n        </div>\n    )\n}\n\n\nexport default AccountNav;","import React, { useEffect, useState } from \"react\"\nimport API from \"../../utils/API\"\nimport AccountHeader from \"./AccountHeader\";\nimport AccountNav from \"./AccountNav\";\n\n\nfunction Account() {\n    const [usersState, setuserState] = useState({\n        name: \"\",\n        email: \"\",\n        user : {}\n    });\n\n    useEffect(() => {\n        API.getUser().then(res => {\n            console.log(\"getuser data\");\n            console.log(res.data.user.email)\n            setuserState({\n                name: res.data.user.name,\n                email: res.data.user.email,\n                user:res.data.user\n            })\n        })\n            .catch(err => console.log(err))\n    }, []\n    );\n\nreturn (\n    <React.Fragment>\n        <AccountHeader userData = {usersState.user} />\n        <AccountNav userData = {usersState.user} />\n    </React.Fragment>\n)\n\n}\n\nexport default Account;","import React, { useRef } from \"react\";\nimport \"../Style/ContestForm.css\"\nimport API from \"../utils/API\";\nimport uuid from 'react-uuid'\nimport Image12 from '../Style/Img/3.jpg';\nfunction ContestForm() {\n\n    // const bgStyle = {\n    //     backgroundImage: \"url(\" + Image12 + \")\"\n    // }\n    const categoriesList = [\"Portrait\", \"Still Life\", \"Landscape\", \"Food\", \"Wildlife\", \"Macro\", \"Event\",\n        \"Fashion\", \"Newborn\", \"Street\", \"Sports\", \"Documentary\", \"Weather\", \"Architectural\"]\n\n    const titleRef = useRef();\n    const descriptionRef = useRef();\n    const categoryRef = useRef();\n    const dueDate = useRef();\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        API.createContestDetails({\n            title: titleRef.current.value,\n            description: descriptionRef.current.value,\n            category: categoryRef.current.value,\n            duedate: dueDate.current.value,\n            id: uuid()\n        }).then(\n            res => {\n                console.log(res.data)\n                window.location.href = \"/contests\"\n\n            })\n            .catch(err => console.log(err));\n    }\n    return (\n        <div className=\"contestFormMainDiv\"  >\n            <br></br>\n            <div className=\" container contestDetailsDiv\" >\n                <h3 className=\"form-title text-center\">Contest Details</h3>\n                <hr></hr>\n                <form className=\"contestFormDiv\">\n                    <div className=\"form-group row justify-content-center contestFormInput\">\n                        <label htmlFor=\"title\" className=\"col-sm-2 col-form-label\">Title</label>\n                        <div className=\"col-sm-10 \">\n                            <input type=\"text\"\n                                className=\"form-control contestTextArea \"\n                                placeholder=\"Contest Title\"\n                                ref={titleRef}\n                            />\n                        </div>\n                    </div>\n                    <div className=\"form-group row contestFormInput\">\n                        <label htmlFor=\"description\" className=\"col-sm-2 col-form-label\">Description</label>\n                        <div className=\"col-sm-10 \">\n                            <textarea  className=\"form-control contestTextArea\" rows=\"3\"\n                                placeholder=\"Tell us something about the contest\"\n                                ref={descriptionRef}>\n                          </textarea>\n                        </div>\n                    </div>\n                    <div className=\"form-group row contestFormInput\">\n                        <label htmlFor=\"description\" className=\"col-sm-2 col-form-label\">Category</label>\n                        <div className=\"col-sm-10 \">\n                            <select className=\"form-control contestTextArea\" ref={categoryRef}>\n                                {categoriesList.map(item => {\n                                    return <option key={item + \"2\"}>{item}</option>\n                                })}\n                            </select>\n\n                        </div>\n                    </div>\n                    <div className=\"form-group row contestFormInput\">\n                        <label htmlFor=\"endDate\" className=\"col-sm-2 col-form-label\">Due Date</label>\n                        <div className=\"col-sm-10 \">\n                            <input type=\"date\"\n                                className=\"form-control contestTextArea\"\n                                placeholder=\"Tell us something about the contest\"\n                                ref={dueDate}\n                            />\n                        </div>\n                    </div>\n\n                    < div className=\"row\">\n                        <button\n                            className=\"btn btn-default contestSaveButton\"\n                            onClick={handleSubmit}\n                        >Post Contest</button>\n                    </div>\n                </form>\n            </div>\n\n\n\n\n        </div>\n\n    )\n}\n\nexport default ContestForm;","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nfunction ImagePage( props) {\n    const {imageUrl} = props.location.state\n    console.log(\"imageUrl \"+imageUrl)\n \n    return (\n        <div style={{backgroundColor:\"#161618\",height: \"100vh\"}} className=\"p-3\">\n            Image page\n            <br />\n            <Link to={{\n                pathname:\"/contests\"\n            }} className=\"float-right\" >Back to Contests</Link>\n         <br />\n            <img src={imageUrl} alt=\"\"></img>\n        </div>\n    )\n}\n\nexport default ImagePage\n","import React, { useState, useEffect } from 'react'\nimport API from '../utils/API';\nimport ContestGrid from './ContestGrid';\nimport ShowContestPage from \"./ShowContestPage\";\n\nfunction SearchedContests(props) {\n    console.log('--- searched --- ');\n    console.log(props.location.state.searchVal);\n    const [contests, setContests] = useState([]);\n    const [eachContest, setEachContest] = useState({});\n    const [viewClicked, setViewClicked] = useState(false);\n\n    useEffect(() => {\n        console.log('Searched for ' + props.location.state.searchVal);\n        API.searchContests(props.location.state.searchVal)\n            .then(res => {\n                console.log(res.data);\n                setContests(res.data);\n            })\n    }, [props.location.state.searchVal]);\n\n    const contestDetails = (contest) => {\n        console.log(contest);\n        setEachContest(contest);\n        setViewClicked(true);\n    }\n\n       \n    const backToContest = () => {\n        setViewClicked(false);\n        // setViewWinners(false);\n    }\n\n    return (\n        <div className=\"bgCover\">\n            <div className=\"container p-5\">\n                {!viewClicked && <div className=\"jumbotron mt-5 p-5 mx-auto justify-content-center\">\n                    {contests.length ? (\n                        <ContestGrid contests={contests} contestDetails={contestDetails} buttonLabel=\"View\" />\n                    ) : (\n                            <h3>No Results have found</h3>\n                        )\n                    }\n\n                </div>}\n                {viewClicked && <ShowContestPage backToContest={backToContest} contestData={eachContest} />}\n            </div>\n\n\n        </div>\n    )\n}\n\nexport default SearchedContests\n","import React from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport \"./App.css\";\nimport NavBar from \"./components/NavBar\";\nimport MainContent from \"./components/MainContent\";\nimport Login from \"./components/Login\";\nimport SignUp from \"./components/SignUp\";\nimport Profile from \"./components/Profile\"\nimport ContestList from \"./components/ContestList\";\nimport Account from \"./components/PersonalAcount/Account\";\nimport ContestForm from \"./components/ContestForm\";\nimport ImagePage from \"./components/ImagePage\";\nimport ShowContestPage from \"./components/ShowContestPage\";\nimport SearchedContests from \"./components/SearchedContests\";\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <NavBar />\n        <Route exact path={[\"/\", \"/main\"]} component={MainContent} />\n        <Route exact path=\"/login\" component={Login} />\n        <Route exact path=\"/signup\" component={SignUp} />\n        <Route exact path=\"/about\" component={MainContent} />\n        <Route exact path = \"/profile\"  component = {Profile} />\n        <Route exact path = \"/personalAccount\"  component = {Account} />\n        <Route exact path = \"/hostevents\"  component = {ContestForm} />\n        <Route exact path = \"/contests\"  component = {ContestList} />\n        <Route exact path = \"/image\" component = {ImagePage} />\n        <Route exact path = \"/showcontest\" component = {ShowContestPage} />\n        <Route exact path = \"/search\" component = {SearchedContests} />\n\n      </div>\n    </Router>\n  );\n}\n\n\nexport default App;","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nregisterServiceWorker();\n","module.exports = __webpack_public_path__ + \"static/media/7.f15c30e0.jpg\";"],"sourceRoot":""}